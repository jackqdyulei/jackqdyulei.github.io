<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lei YU&#39;s blog</title>
  <subtitle>Keep it simple, stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-02-29T16:17:17.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lei YU</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>confusion-matrix-lightside</title>
    <link href="http://yoursite.com/2016/02/29/confusion-matrix-lightside/"/>
    <id>http://yoursite.com/2016/02/29/confusion-matrix-lightside/</id>
    <published>2016-02-29T16:17:17.000Z</published>
    <updated>2016-02-29T16:17:17.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>midterm-18653</title>
    <link href="http://yoursite.com/2016/02/28/midterm-18653/"/>
    <id>http://yoursite.com/2016/02/28/midterm-18653/</id>
    <published>2016-02-29T04:25:28.000Z</published>
    <updated>2016-03-03T02:54:16.000Z</updated>
    
    <content type="html">&lt;p&gt;有关18653-Software Architecture and Design的期中考试复习&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Basic-questions&quot;&gt;&lt;a href=&quot;#Basic-questions&quot; class=&quot;headerlink&quot; title=&quot;Basic questions&quot;&gt;&lt;/a&gt;Basic questions&lt;!-- more --&gt;&lt;/h2&gt;&lt;h3 id=&quot;What-is-Software-Architecture&quot;&gt;&lt;a href=&quot;#What-is-Software-Architecture&quot; class=&quot;headerlink&quot; title=&quot;What is Software Architecture&quot;&gt;&lt;/a&gt;What is Software Architecture&lt;/h3&gt;&lt;p&gt;Software architecture is a level of design that involves&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the description of elements from which systems are bulit&lt;/li&gt;
&lt;li&gt;interactions among those elements&lt;/li&gt;
&lt;li&gt;patterns that guide their composition&lt;/li&gt;
&lt;li&gt;constraints on these patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Why-software-architecture-is-important&quot;&gt;&lt;a href=&quot;#Why-software-architecture-is-important&quot; class=&quot;headerlink&quot; title=&quot;Why software architecture is important&quot;&gt;&lt;/a&gt;Why software architecture is important&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;It has been proved useful for families of system.&lt;/li&gt;
&lt;li&gt;It can make the complex system flexible and well organized&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Various-view-points&quot;&gt;&lt;a href=&quot;#Various-view-points&quot; class=&quot;headerlink&quot; title=&quot;Various view points&quot;&gt;&lt;/a&gt;Various view points&lt;/h3&gt;&lt;h4 id=&quot;4-1-Views&quot;&gt;&lt;a href=&quot;#4-1-Views&quot; class=&quot;headerlink&quot; title=&quot;4+1 Views&quot;&gt;&lt;/a&gt;4+1 Views&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;角度1&lt;/strong&gt;：从作业2的要求中获取的名词与解析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function View: Show the component diagram, including interfaces and dependencies.&lt;/li&gt;
&lt;li&gt;Information View: Show the schema, data models and data flows.&lt;/li&gt;
&lt;li&gt;Deployment View: Where to deploy the software components&lt;/li&gt;
&lt;li&gt;Development View: main software packages&lt;/li&gt;
&lt;li&gt;Concurrency View: How do we ensure data consistency in the distributed system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;角度2&lt;/strong&gt;：从课件中获取的名词与解析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logical View： 让普通用户能看懂的示例图，介绍整个系统的主要模块与简单交互。包含了简单地类图，时序图等&lt;/li&gt;
&lt;li&gt;Development View: 从程序员的角度较宏观得介绍整个系统的组成。包含了包图，类图&lt;/li&gt;
&lt;li&gt;Process View: 介绍了系统事件处理的流程，介绍整个系统是如何运行的，今儿验证系统的性能。&lt;/li&gt;
&lt;li&gt;Physical View: 从系统工程师的角度介绍，从物理仪器角度介绍系统的架构。mapping the software to hardware&lt;/li&gt;
&lt;li&gt;Scenarios: Putting it all together and use them to show the important scenarios&lt;h3 id=&quot;What-does-it-mean-by-architecture-through-software-lifecycle&quot;&gt;&lt;a href=&quot;#What-does-it-mean-by-architecture-through-software-lifecycle&quot; class=&quot;headerlink&quot; title=&quot;What does it mean by architecture through software lifecycle?&quot;&gt;&lt;/a&gt;What does it mean by architecture through software lifecycle?&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;Requirements&lt;/li&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Analysis and Testing&lt;/li&gt;
&lt;li&gt;Evolution&lt;/li&gt;
&lt;li&gt;Development Process&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Will-architecture-design-allow-creativity&quot;&gt;&lt;a href=&quot;#Will-architecture-design-allow-creativity&quot; class=&quot;headerlink&quot; title=&quot;Will architecture design allow creativity?&quot;&gt;&lt;/a&gt;Will architecture design allow creativity?&lt;/h3&gt;&lt;p&gt;Yes&lt;/p&gt;
&lt;h3 id=&quot;Stakeholders&quot;&gt;&lt;a href=&quot;#Stakeholders&quot; class=&quot;headerlink&quot; title=&quot;Stakeholders&quot;&gt;&lt;/a&gt;Stakeholders&lt;/h3&gt;&lt;p&gt;Architects, Developers, Testers, Managers, Customers, Users, Vendors&lt;/p&gt;
&lt;h2 id=&quot;Basic-elements&quot;&gt;&lt;a href=&quot;#Basic-elements&quot; class=&quot;headerlink&quot; title=&quot;Basic elements&quot;&gt;&lt;/a&gt;Basic elements&lt;/h2&gt;&lt;h3 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h3&gt;&lt;h4 id=&quot;Defination&quot;&gt;&lt;a href=&quot;#Defination&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A software component is an architectural entity that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;encapsulates a subset of the system’s functionality and data&lt;/li&gt;
&lt;li&gt;restricts access to that subset&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Connector&quot;&gt;&lt;a href=&quot;#Connector&quot; class=&quot;headerlink&quot; title=&quot;Connector&quot;&gt;&lt;/a&gt;Connector&lt;/h3&gt;&lt;h4 id=&quot;Defination-1&quot;&gt;&lt;a href=&quot;#Defination-1&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A &lt;strong&gt;software connector&lt;/strong&gt; is an architectural building block tasked with effecting and regulating interactions among components&lt;/p&gt;
&lt;h4 id=&quot;Taxonomy&quot;&gt;&lt;a href=&quot;#Taxonomy&quot; class=&quot;headerlink&quot; title=&quot;Taxonomy&quot;&gt;&lt;/a&gt;Taxonomy&lt;/h4&gt;&lt;h5 id=&quot;4-main-roles&quot;&gt;&lt;a href=&quot;#4-main-roles&quot; class=&quot;headerlink&quot; title=&quot;4 main roles&quot;&gt;&lt;/a&gt;4 main roles&lt;/h5&gt;&lt;p&gt;Communication, Conversion, Facilitation, Coordination&lt;/p&gt;
&lt;h5 id=&quot;8-main-types&quot;&gt;&lt;a href=&quot;#8-main-types&quot; class=&quot;headerlink&quot; title=&quot;8 main types&quot;&gt;&lt;/a&gt;8 main types&lt;/h5&gt;&lt;p&gt;Event, Stream, Procedure Call, Arbitrator, Data Access, Distributor, Linkage, Adaptor&lt;/p&gt;
&lt;h4 id=&quot;Benefits-of-first-class-connectors&quot;&gt;&lt;a href=&quot;#Benefits-of-first-class-connectors&quot; class=&quot;headerlink&quot; title=&quot;Benefits of first-class connectors&quot;&gt;&lt;/a&gt;Benefits of first-class connectors&lt;/h4&gt;&lt;p&gt;Software evolution, separation of concerns, modularity, pluggability&lt;/p&gt;
&lt;h3 id=&quot;Configuration&quot;&gt;&lt;a href=&quot;#Configuration&quot; class=&quot;headerlink&quot; title=&quot;Configuration&quot;&gt;&lt;/a&gt;Configuration&lt;/h3&gt;&lt;p&gt;An architectural configuration, or topology, is a set of specific associations between the components and connectors of a software system’s architecture&lt;/p&gt;
&lt;h3 id=&quot;Rationale&quot;&gt;&lt;a href=&quot;#Rationale&quot; class=&quot;headerlink&quot; title=&quot;Rationale&quot;&gt;&lt;/a&gt;Rationale&lt;/h3&gt;&lt;p&gt;Rationale is the information that explains why particular architectural decisions were made, and what purpose various elements serve&lt;/p&gt;
&lt;h2 id=&quot;Architectural-sytles-and-patterns&quot;&gt;&lt;a href=&quot;#Architectural-sytles-and-patterns&quot; class=&quot;headerlink&quot; title=&quot;Architectural sytles and patterns&quot;&gt;&lt;/a&gt;Architectural sytles and patterns&lt;/h2&gt;&lt;h3 id=&quot;Architectural-sytles&quot;&gt;&lt;a href=&quot;#Architectural-sytles&quot; class=&quot;headerlink&quot; title=&quot;Architectural sytles&quot;&gt;&lt;/a&gt;Architectural sytles&lt;/h3&gt;&lt;h4 id=&quot;Defination-2&quot;&gt;&lt;a href=&quot;#Defination-2&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A set of architectural desgin decisions that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;are applicable in a given deveopment context&lt;/li&gt;
&lt;li&gt;constrain architectural design decisions that specific to a particular system within that context&lt;/li&gt;
&lt;li&gt;elicit beneficial qualities in each resulting system&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h4&gt;&lt;p&gt;详见另一篇文章。&lt;/p&gt;
&lt;h3 id=&quot;Architectural-patterns&quot;&gt;&lt;a href=&quot;#Architectural-patterns&quot; class=&quot;headerlink&quot; title=&quot;Architectural patterns&quot;&gt;&lt;/a&gt;Architectural patterns&lt;/h3&gt;&lt;h4 id=&quot;Defination-3&quot;&gt;&lt;a href=&quot;#Defination-3&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A set of architectural design decisions that are applicable to a recurring design problem, and parameterized to account for different software development contexts in which that problem appears.&lt;/p&gt;
&lt;h3 id=&quot;Example-1&quot;&gt;&lt;a href=&quot;#Example-1&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;p&gt;3-tier (Stage-Logic-Display), MVC, Sense Compute Control&lt;/p&gt;
&lt;h3 id=&quot;Comparisons-of-style-and-pattern&quot;&gt;&lt;a href=&quot;#Comparisons-of-style-and-pattern&quot; class=&quot;headerlink&quot; title=&quot;Comparisons of style and pattern&quot;&gt;&lt;/a&gt;Comparisons of style and pattern&lt;/h3&gt;&lt;p&gt;Compared to styles, architectural patterns are at a &lt;strong&gt;coarser level of granularity&lt;/strong&gt; (design decisions versus actual architectural elements) and are inherently more &lt;strong&gt;domain specific&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Methods-of-evaluating-design-methods-like-styles-and-patterns&quot;&gt;&lt;a href=&quot;#Methods-of-evaluating-design-methods-like-styles-and-patterns&quot; class=&quot;headerlink&quot; title=&quot;Methods of evaluating design methods like styles and patterns&quot;&gt;&lt;/a&gt;Methods of evaluating design methods like styles and patterns&lt;/h3&gt;&lt;p&gt;Vocabulary, structural patterns, computational model, invariants, common examples, disadvantages, specializations&lt;/p&gt;
&lt;h3 id=&quot;Methods-of-design&quot;&gt;&lt;a href=&quot;#Methods-of-design&quot; class=&quot;headerlink&quot; title=&quot;Methods of design&quot;&gt;&lt;/a&gt;Methods of design&lt;/h3&gt;&lt;h4 id=&quot;Greenfield-design&quot;&gt;&lt;a href=&quot;#Greenfield-design&quot; class=&quot;headerlink&quot; title=&quot;Greenfield design&quot;&gt;&lt;/a&gt;Greenfield design&lt;/h4&gt;&lt;p&gt;这里指的是大家对一个领域都没有经验，就需要用一系列方法不断学习或者试错找出最优解，常用的方法有：&lt;br&gt;Analogy searching, Brainstorming, Literature searching, Morphological Charts, Removing Mental Blocks, Insight from requirements/implementation&lt;/p&gt;
&lt;h2 id=&quot;Architectural-Modeling&quot;&gt;&lt;a href=&quot;#Architectural-Modeling&quot; class=&quot;headerlink&quot; title=&quot;Architectural Modeling&quot;&gt;&lt;/a&gt;Architectural Modeling&lt;/h2&gt;&lt;h3 id=&quot;Defination-4&quot;&gt;&lt;a href=&quot;#Defination-4&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;An architectural model is an artifact that captures some or all of the design decisions that comprise a system’s architecture&lt;/li&gt;
&lt;li&gt;Architectural modeling is the reification and documentation of those design decisions&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;How-to-choose-what-to-model&quot;&gt;&lt;a href=&quot;#How-to-choose-what-to-model&quot; class=&quot;headerlink&quot; title=&quot;How to choose what to model?&quot;&gt;&lt;/a&gt;How to choose what to model?&lt;/h3&gt;&lt;p&gt;Cost/Benefit Decision&lt;/p&gt;
&lt;h3 id=&quot;What-do-we-model&quot;&gt;&lt;a href=&quot;#What-do-we-model&quot; class=&quot;headerlink&quot; title=&quot;What do we model?&quot;&gt;&lt;/a&gt;What do we model?&lt;/h3&gt;&lt;p&gt;Structure (Architectural element), static/dynamic behaviors, functional/non-functional aspects, Views/Viewpoints&lt;/p&gt;
&lt;h3 id=&quot;Important-things-to-“get-right”&quot;&gt;&lt;a href=&quot;#Important-things-to-“get-right”&quot; class=&quot;headerlink&quot; title=&quot;Important things to “get right”&quot;&gt;&lt;/a&gt;Important things to “get right”&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Ambiguity: A model is ambiguous if it is open to more than one interpretation&lt;/li&gt;
&lt;li&gt;Accuracy: A model is accurate if it is correct, conforms to fact, or deviates from correctness within acceptable limits.&lt;/li&gt;
&lt;li&gt;Precision: A model is precise if it is specific, detailed and exact.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;How-do-we-evaluate-modeling-techniques&quot;&gt;&lt;a href=&quot;#How-do-we-evaluate-modeling-techniques&quot; class=&quot;headerlink&quot; title=&quot;How do we evaluate modeling techniques?&quot;&gt;&lt;/a&gt;How do we evaluate modeling techniques?&lt;/h3&gt;&lt;p&gt;Scope/Purpose, Basic Elements, Style, Static/Dynamic Aspects, Dynamic Modeling&lt;/p&gt;
&lt;h2 id=&quot;Service-Oriented-Architecture&quot;&gt;&lt;a href=&quot;#Service-Oriented-Architecture&quot; class=&quot;headerlink&quot; title=&quot;Service Oriented Architecture&quot;&gt;&lt;/a&gt;Service Oriented Architecture&lt;/h2&gt;&lt;h3 id=&quot;Concept-of-SOA&quot;&gt;&lt;a href=&quot;#Concept-of-SOA&quot; class=&quot;headerlink&quot; title=&quot;Concept of SOA&quot;&gt;&lt;/a&gt;Concept of SOA&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SOA&lt;/strong&gt; is a business IT aligned approach in which applications rely on available services to facilitate business processes. It guides the establishment of a loosely coupled system with flexibility and extensibility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Services Computing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bridges the gap between business and IT&lt;/li&gt;
&lt;li&gt;promises to benefit business&lt;/li&gt;
&lt;li&gt;enable reusable, scalable software as services on the internet&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;SOA-on-a-Bilateral-View&quot;&gt;&lt;a href=&quot;#SOA-on-a-Bilateral-View&quot; class=&quot;headerlink&quot; title=&quot;SOA on a Bilateral View&quot;&gt;&lt;/a&gt;SOA on a Bilateral View&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Top-Down Approach&lt;/strong&gt;: decompose business components into business process each been realized by IT process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bottom-Up Approach&lt;/strong&gt;: provides SOA based IT resources, which can be seamlessly integrated to rapidly. Create new business processes that lead to new business opportunities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Enterprise-Service-Bus-ESB&quot;&gt;&lt;a href=&quot;#Enterprise-Service-Bus-ESB&quot; class=&quot;headerlink&quot; title=&quot;Enterprise Service Bus(ESB)&quot;&gt;&lt;/a&gt;Enterprise Service Bus(ESB)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ESB&lt;/strong&gt; is a conceptual software infrastructure that facilitates dynamic integration, message routing and their interactions, which paves a new systematic way of constructing and deploying enterprise services.&lt;/p&gt;
&lt;h3 id=&quot;SOA-RA&quot;&gt;&lt;a href=&quot;#SOA-RA&quot; class=&quot;headerlink&quot; title=&quot;SOA-RA&quot;&gt;&lt;/a&gt;SOA-RA&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SOA-RA&lt;/strong&gt; partitions an SOA-based system into a reusable architecture components&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enterprise SOA Abstraction Layers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business Process Layer&lt;/li&gt;
&lt;li&gt;Business Services Layer&lt;/li&gt;
&lt;li&gt;Component Layer&lt;/li&gt;
&lt;li&gt;Legacy Object Integration Layer&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ![](./2016-02-28-midterm-18653/soa-ra.jpg) --&gt;
&lt;img src=&quot;/2016/02/28/midterm-18653/soa-ra.jpg&quot; alt=&quot;soa-ra.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;ATAM&quot;&gt;&lt;a href=&quot;#ATAM&quot; class=&quot;headerlink&quot; title=&quot;ATAM&quot;&gt;&lt;/a&gt;ATAM&lt;/h2&gt;&lt;h3 id=&quot;9-steps&quot;&gt;&lt;a href=&quot;#9-steps&quot; class=&quot;headerlink&quot; title=&quot;9 steps&quot;&gt;&lt;/a&gt;9 steps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Step 1: Present ATAM&lt;/li&gt;
&lt;li&gt;Step 2: Present Business Drivers&lt;/li&gt;
&lt;li&gt;Step 3: Present the Architecture&lt;/li&gt;
&lt;li&gt;Step 4: Identify Architectural Approaches&lt;/li&gt;
&lt;li&gt;Step 5: Generate Utility Tree and scenario&lt;/li&gt;
&lt;li&gt;Step 6: Analyze Architectural Approaches&lt;/li&gt;
&lt;li&gt;Step 7: Brainstorm &amp;amp; Prioritize Scenarios&lt;/li&gt;
&lt;li&gt;Step 8: Analyze Architectural Approaches&lt;/li&gt;
&lt;li&gt;Step 9: Present ATAM results&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;People-Roles-and-Teams&quot;&gt;&lt;a href=&quot;#People-Roles-and-Teams&quot; class=&quot;headerlink&quot; title=&quot;People, Roles and Teams&quot;&gt;&lt;/a&gt;People, Roles and Teams&lt;/h2&gt;&lt;h3 id=&quot;Architect-desired-skills&quot;&gt;&lt;a href=&quot;#Architect-desired-skills&quot; class=&quot;headerlink&quot; title=&quot;Architect desired skills&quot;&gt;&lt;/a&gt;Architect desired skills&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Software development expertise&lt;/li&gt;
&lt;li&gt;Domain expertise&lt;/li&gt;
&lt;li&gt;Communicator&lt;/li&gt;
&lt;li&gt;Strategist&lt;/li&gt;
&lt;li&gt;Consultant&lt;/li&gt;
&lt;li&gt;Leader&lt;/li&gt;
&lt;li&gt;Technologist&lt;/li&gt;
&lt;li&gt;Cost estimator&lt;/li&gt;
&lt;li&gt;Cheerleader&lt;/li&gt;
&lt;li&gt;Politician&lt;/li&gt;
&lt;li&gt;Salesperson&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有关18653-Software Architecture and Design的期中考试复习&lt;/p&gt;
    
    </summary>
    
      <category term="course notes" scheme="http://yoursite.com/categories/course-notes/"/>
    
    
      <category term="18653" scheme="http://yoursite.com/tags/18653/"/>
    
  </entry>
  
  <entry>
    <title>Architectural Styles介绍</title>
    <link href="http://yoursite.com/2016/02/27/architectural-styles/"/>
    <id>http://yoursite.com/2016/02/27/architectural-styles/</id>
    <published>2016-02-28T04:45:05.000Z</published>
    <updated>2016-02-28T17:25:43.000Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍各种Architectural Styles, 例如C/S, 以及一系列奇奇怪怪的styles。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;为了避免翻译失真，所有风格都保留英文单词。同时为了应付考试，我会在每个style后面列出英文关键词。&lt;/p&gt;
&lt;h2 id=&quot;Traditional-language-influenced-styles&quot;&gt;&lt;a href=&quot;#Traditional-language-influenced-styles&quot; class=&quot;headerlink&quot; title=&quot;Traditional, language-influenced styles&quot;&gt;&lt;/a&gt;Traditional, language-influenced styles&lt;/h2&gt;&lt;h3 id=&quot;Main-program-and-subroutines&quot;&gt;&lt;a href=&quot;#Main-program-and-subroutines&quot; class=&quot;headerlink&quot; title=&quot;Main program and subroutines&quot;&gt;&lt;/a&gt;Main program and subroutines&lt;/h3&gt;&lt;p&gt;这个Style感觉就是C语言的&lt;code&gt;面向过程&lt;/code&gt;的思想。项目中包含&lt;code&gt;主程序&lt;/code&gt;于&lt;code&gt;子过程（函数）&lt;/code&gt;等组件。组件之间使用&lt;code&gt;函数调用&lt;/code&gt;连接。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;procedure-oriented&lt;/code&gt;, &lt;code&gt;main program&lt;/code&gt;, &lt;code&gt;subroutines&lt;/code&gt;, &lt;code&gt;procedure calls&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Object-oriented&quot;&gt;&lt;a href=&quot;#Object-oriented&quot; class=&quot;headerlink&quot; title=&quot;Object-oriented&quot;&gt;&lt;/a&gt;Object-oriented&lt;/h3&gt;&lt;p&gt;所有的组件都是&lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;之间用&lt;code&gt;Method invocation&lt;/code&gt;通信。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;Object&lt;/code&gt;，&lt;code&gt;Method invocation&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Layered&quot;&gt;&lt;a href=&quot;#Layered&quot; class=&quot;headerlink&quot; title=&quot;Layered&quot;&gt;&lt;/a&gt;Layered&lt;/h2&gt;&lt;h3 id=&quot;Virtual-machines&quot;&gt;&lt;a href=&quot;#Virtual-machines&quot; class=&quot;headerlink&quot; title=&quot;Virtual machines&quot;&gt;&lt;/a&gt;Virtual machines&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;Virtual machines&lt;/code&gt;中，存在层级关系，每一层都有一些列&lt;code&gt;服务&lt;/code&gt;或者&lt;code&gt;接口&lt;/code&gt;，供上一层调用。下图就是一个例子。&lt;br&gt;关键词: &lt;code&gt;layer offers a set of services&lt;/code&gt;, &lt;code&gt;services accessed by layer above it&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/virtual-machine.jpg&quot; alt=&quot;virtual-machine.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Client-server&quot;&gt;&lt;a href=&quot;#Client-server&quot; class=&quot;headerlink&quot; title=&quot;Client server&quot;&gt;&lt;/a&gt;Client server&lt;/h3&gt;&lt;p&gt;是一个特殊的&lt;code&gt;virtual machine&lt;/code&gt;。 只有两层(C和S)，并通过网络协议连接。如下图。&lt;br&gt;关键词： &lt;code&gt;two layers virtual machine with network connection&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/c-s.jpg&quot; alt=&quot;c-s.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;Data-flow-styles&quot;&gt;&lt;a href=&quot;#Data-flow-styles&quot; class=&quot;headerlink&quot; title=&quot;Data-flow styles&quot;&gt;&lt;/a&gt;Data-flow styles&lt;/h2&gt;&lt;h3 id=&quot;Batch-sequential&quot;&gt;&lt;a href=&quot;#Batch-sequential&quot; class=&quot;headerlink&quot; title=&quot;Batch sequential&quot;&gt;&lt;/a&gt;Batch sequential&lt;/h3&gt;&lt;p&gt;是一种因计算设备限制而提出的一种古老技术。在这种技术中，我们会将一个大问题简化为几个小部分，每个部分用&lt;code&gt;磁带&lt;/code&gt;交互。现在该技术应该被淘汰了。&lt;br&gt;关键词： &lt;code&gt;data processing when limitations fo computing equipment&lt;/code&gt;, &lt;code&gt;subdivided into severable components&lt;/code&gt;,&lt;code&gt;transfer by magnetic tapes&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/batch-seq.jpg&quot; alt=&quot;batch-seq.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Pipe-and-filter&quot;&gt;&lt;a href=&quot;#Pipe-and-filter&quot; class=&quot;headerlink&quot; title=&quot;Pipe and filter&quot;&gt;&lt;/a&gt;Pipe and filter&lt;/h3&gt;&lt;p&gt;各个&lt;code&gt;filter program&lt;/code&gt;间通过&lt;code&gt;stream&lt;/code&gt;连接。灵活弱耦合但是效率略低。&lt;br&gt;关键词： &lt;code&gt;filter program connects by stream&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/pipe-filter.jpg&quot; alt=&quot;pipe-filter.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;Shared-memory&quot;&gt;&lt;a href=&quot;#Shared-memory&quot; class=&quot;headerlink&quot; title=&quot;Shared memory&quot;&gt;&lt;/a&gt;Shared memory&lt;/h2&gt;&lt;h3 id=&quot;Blackboard&quot;&gt;&lt;a href=&quot;#Blackboard&quot; class=&quot;headerlink&quot; title=&quot;Blackboard&quot;&gt;&lt;/a&gt;Blackboard&lt;/h3&gt;&lt;p&gt;很有意思的一个Styles，这里可以通过一个故事来讲解。有几个专家解决一个问题。每个专家解决一个小问题后可以将内容写到&lt;code&gt;黑板&lt;/code&gt;上，然后其他专家可以根据黑板上的内容继续解决问题，然后写到黑板上，知道整个问题被彻底解决。&lt;/p&gt;
&lt;p&gt;在这个Style中，有一个共享的&lt;code&gt;黑板&lt;/code&gt;用于交流信息，因此叫做&lt;code&gt;Blackboard&lt;/code&gt;。下图中也可以看到三个&lt;code&gt;专家&lt;/code&gt;共享一个&lt;code&gt;黑板&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关键词: &lt;code&gt;experts&lt;/code&gt;,&lt;code&gt;one blackboard&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/blackboard.jpg&quot; alt=&quot;blackboard.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Rule-based&quot;&gt;&lt;a href=&quot;#Rule-based&quot; class=&quot;headerlink&quot; title=&quot;Rule based&quot;&gt;&lt;/a&gt;Rule based&lt;/h3&gt;&lt;p&gt;在这里，共享的是&lt;code&gt;knowledge base&lt;/code&gt;。这是一个包含很多&lt;code&gt;事实&lt;/code&gt;并能产生规则的数据库。这些规则就像&lt;code&gt;if .. then&lt;/code&gt;语句。该系统有两个功能：&lt;code&gt;插入数据（事实）&lt;/code&gt;和&lt;code&gt;查询&lt;/code&gt;。个人感觉就是一个数据库，内部存储一系列数据，然后我们去查询是否有满足特定条件的数据，然后返回&lt;code&gt;true/false&lt;/code&gt;。&lt;br&gt;&lt;code&gt;Prolog&lt;/code&gt;就是基于&lt;code&gt;rule based&lt;/code&gt;的语言，具体可以看&lt;a href=&quot;https://zh.wikipedia.org/wiki/Prolog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;knowledge base&lt;/code&gt;,&lt;code&gt;contains facts and production rules&lt;/code&gt;, &lt;code&gt;query the goal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下图就是一个例子，&lt;code&gt;fact&lt;/code&gt;是&lt;code&gt;burnrate&lt;/code&gt;; &lt;code&gt;goal&lt;/code&gt;是查询&lt;code&gt;是否landed&lt;/code&gt;。我们需要不断修改&lt;code&gt;burnrate&lt;/code&gt;值，然后通过查询，看当前是否满足规则&lt;code&gt;&amp;lt;=(a,0),&amp;lt;(v,3)&lt;/code&gt;。满足的话就说明&lt;code&gt;land&lt;/code&gt;成功。&lt;br&gt;&lt;img src=&quot;/2016/02/27/architectural-styles/rule-base.jpg&quot; alt=&quot;rule-base.jpg&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Interpreter&quot;&gt;&lt;a href=&quot;#Interpreter&quot; class=&quot;headerlink&quot; title=&quot;Interpreter&quot;&gt;&lt;/a&gt;Interpreter&lt;/h2&gt;&lt;h3 id=&quot;Basic-interpreter&quot;&gt;&lt;a href=&quot;#Basic-interpreter&quot; class=&quot;headerlink&quot; title=&quot;Basic interpreter&quot;&gt;&lt;/a&gt;Basic interpreter&lt;/h3&gt;&lt;p&gt;就像linux指令的解释器。输入一条指令，&lt;code&gt;inference engine&lt;/code&gt;解析指令，然后执行。&lt;/p&gt;
&lt;p&gt;关键词: &lt;code&gt;inference engine parse a command&lt;/code&gt;, &lt;code&gt;performs variable resolution&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Mobile-code&quot;&gt;&lt;a href=&quot;#Mobile-code&quot; class=&quot;headerlink&quot; title=&quot;Mobile code&quot;&gt;&lt;/a&gt;Mobile code&lt;/h3&gt;&lt;p&gt;在这里，我们会把代码传输到一个远程主机解析。&lt;/p&gt;
&lt;p&gt;举例来说，在分布式系统中，如果需要处理大量数据，我们更倾向于把代码传输到含有数据的主机上执行，这样效率更高。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;code transmitted to a remote host for interpretation&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Implicit-invocation&quot;&gt;&lt;a href=&quot;#Implicit-invocation&quot; class=&quot;headerlink&quot; title=&quot;Implicit invocation&quot;&gt;&lt;/a&gt;Implicit invocation&lt;/h2&gt;&lt;h3 id=&quot;Event-based&quot;&gt;&lt;a href=&quot;#Event-based&quot; class=&quot;headerlink&quot; title=&quot;Event-based&quot;&gt;&lt;/a&gt;Event-based&lt;/h3&gt;&lt;p&gt;不同独立的部分通过在&lt;code&gt;event bus&lt;/code&gt;上发送&lt;code&gt;event&lt;/code&gt;来交互。当组件接受到一个&lt;code&gt;event&lt;/code&gt;，会决定是接收或者无视。&lt;/p&gt;
&lt;p&gt;最初的&lt;code&gt;Event-based&lt;/code&gt;中，所有组件共享一个&lt;code&gt;event bus&lt;/code&gt;，这样效率很低。因此现在的&lt;code&gt;event-based&lt;/code&gt;只会向感兴趣的组件发送&lt;code&gt;event&lt;/code&gt;。所以，现在&lt;code&gt;event-based&lt;/code&gt;和&lt;code&gt;publish-subscribe&lt;/code&gt;没有本质区别了。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;send event&lt;/code&gt;, &lt;code&gt;event bus&lt;/code&gt;, &lt;code&gt;react or ignore an event&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Publish-subscribe&quot;&gt;&lt;a href=&quot;#Publish-subscribe&quot; class=&quot;headerlink&quot; title=&quot;Publish-subscribe&quot;&gt;&lt;/a&gt;Publish-subscribe&lt;/h3&gt;&lt;p&gt;很经典的style，这里不多解释。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;publisher create information&lt;/code&gt;, &lt;code&gt;subscriber be informed of the information&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Peer-to-peer&quot;&gt;&lt;a href=&quot;#Peer-to-peer&quot; class=&quot;headerlink&quot; title=&quot;Peer to peer&quot;&gt;&lt;/a&gt;Peer to peer&lt;/h2&gt;&lt;p&gt;在一个网络中有很多松耦合的节点。两两节点可以交互。每个节点既是&lt;code&gt;client&lt;/code&gt;也是&lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;loosely coupled autonomous peers&lt;/code&gt;, &lt;code&gt;act both as client and server&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Derived-styles&quot;&gt;&lt;a href=&quot;#Derived-styles&quot; class=&quot;headerlink&quot; title=&quot;Derived styles&quot;&gt;&lt;/a&gt;Derived styles&lt;/h2&gt;&lt;p&gt;这部分应该不会考到，暂且先搁置一边。&lt;/p&gt;
&lt;h3 id=&quot;C2&quot;&gt;&lt;a href=&quot;#C2&quot; class=&quot;headerlink&quot; title=&quot;C2&quot;&gt;&lt;/a&gt;C2&lt;/h3&gt;&lt;h3 id=&quot;CORBA&quot;&gt;&lt;a href=&quot;#CORBA&quot; class=&quot;headerlink&quot; title=&quot;CORBA&quot;&gt;&lt;/a&gt;CORBA&lt;/h3&gt;&lt;h3 id=&quot;SOA&quot;&gt;&lt;a href=&quot;#SOA&quot; class=&quot;headerlink&quot; title=&quot;SOA&quot;&gt;&lt;/a&gt;SOA&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍各种Architectural Styles, 例如C/S, 以及一系列奇奇怪怪的styles。&lt;br&gt;
    
    </summary>
    
      <category term="course notes" scheme="http://yoursite.com/categories/course-notes/"/>
    
    
      <category term="architectural styles" scheme="http://yoursite.com/tags/architectural-styles/"/>
    
  </entry>
  
  <entry>
    <title>Linux指令学习</title>
    <link href="http://yoursite.com/2016/02/27/linux-command/"/>
    <id>http://yoursite.com/2016/02/27/linux-command/</id>
    <published>2016-02-27T13:44:03.000Z</published>
    <updated>2016-02-27T17:17:08.000Z</updated>
    
    <content type="html">&lt;p&gt;常用Linux指令的学习与整理&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h3 id=&quot;读懂man手册&quot;&gt;&lt;a href=&quot;#读懂man手册&quot; class=&quot;headerlink&quot; title=&quot;读懂man手册&quot;&gt;&lt;/a&gt;读懂man手册&lt;/h3&gt;&lt;p&gt;其实，对于任何不理解的指令，我们可以执行&lt;code&gt;man command&lt;/code&gt;查看指令的详细用法。下面我们学习一下&lt;code&gt;man&lt;/code&gt;手册的语法结构。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;man&lt;/code&gt;手册中，我们主要关心&lt;code&gt;Synopsis&lt;/code&gt;与&lt;code&gt;Description&lt;/code&gt;。前者是&lt;code&gt;命令语法的摘要&lt;/code&gt;，后者是&lt;code&gt;完整的描述&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;Synopsis&quot;&gt;&lt;a href=&quot;#Synopsis&quot; class=&quot;headerlink&quot; title=&quot;Synopsis&quot;&gt;&lt;/a&gt;Synopsis&lt;/h5&gt;&lt;p&gt;通常的结构为&lt;code&gt;command [OPTION]... [FILE]...&lt;/code&gt;。其中要注意以下事项。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt;里面的选项表示可有可无&lt;/li&gt;
&lt;li&gt;&lt;code&gt;...&lt;/code&gt;表示选项可以列多个&lt;/li&gt;
&lt;li&gt;选项通常有两种表示方法&lt;ul&gt;
&lt;li&gt;长选项： 用&lt;code&gt;--&lt;/code&gt;引导，后面跟完整的单词，如&lt;code&gt;--help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;短选项： 用&lt;code&gt;-&lt;/code&gt;引导，后面跟单个字符，如&lt;code&gt;-a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多个短选项可以组合使用，例如&lt;code&gt;-a -l&lt;/code&gt;可以写为&lt;code&gt;-al&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;由&lt;code&gt;|&lt;/code&gt;分开的几个选项，表示只能从几个选项中选择一个&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h5&gt;&lt;p&gt;一般描述中会列举参数的详细含义&lt;/p&gt;
&lt;h2 id=&quot;基本指令&quot;&gt;&lt;a href=&quot;#基本指令&quot; class=&quot;headerlink&quot; title=&quot;基本指令&quot;&gt;&lt;/a&gt;基本指令&lt;/h2&gt;&lt;p&gt;在这里，主要介绍基于文件增删查改的指令&lt;/p&gt;
&lt;h3 id=&quot;ls指令&quot;&gt;&lt;a href=&quot;#ls指令&quot; class=&quot;headerlink&quot; title=&quot;ls指令&quot;&gt;&lt;/a&gt;ls指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ls [OPTION]… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;列出目录下的文件，常用的用法有：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls --color 以彩色显示档案 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;     显示详细资料 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;     显示隐藏档案 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls -al    同时显示隐藏档案与详细资料&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;cp指令&quot;&gt;&lt;a href=&quot;#cp指令&quot; class=&quot;headerlink&quot; title=&quot;cp指令&quot;&gt;&lt;/a&gt;cp指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cp [OPTION]… [-T] SOURCE DEST&lt;br&gt;cp [OPTION]… SOURCE… DIRECTORY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行拷贝，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt 	复制&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt,并重命名为&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt ./dir/	将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt复制到dir目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt ./dir	将两个文件复制到dir目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;mv指令&quot;&gt;&lt;a href=&quot;#mv指令&quot; class=&quot;headerlink&quot; title=&quot;mv指令&quot;&gt;&lt;/a&gt;mv指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;mv [OPTION]… [-T] SOURCE DEST&lt;br&gt;mv [OPTION]… SOURCE… DIRECTORY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行移动。我们会发现&lt;code&gt;cp&lt;/code&gt;和&lt;code&gt;mv&lt;/code&gt;的指令结构完全一致，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt 	移动&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt,并重命名为&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt ./dir/	将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt移动到dir目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt ./dir	将两个文件移动到dir目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;rm指令&quot;&gt;&lt;a href=&quot;#rm指令&quot; class=&quot;headerlink&quot; title=&quot;rm指令&quot;&gt;&lt;/a&gt;rm指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cp [OPTION]… FILE…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行删除，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ rm -rf directory 将文件夹下的所有文件强制删除&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;pwd指令&quot;&gt;&lt;a href=&quot;#pwd指令&quot; class=&quot;headerlink&quot; title=&quot;pwd指令&quot;&gt;&lt;/a&gt;pwd指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;pwd [OPTION]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显示当前的文件目录&lt;/p&gt;
&lt;h3 id=&quot;cat指令&quot;&gt;&lt;a href=&quot;#cat指令&quot; class=&quot;headerlink&quot; title=&quot;cat指令&quot;&gt;&lt;/a&gt;cat指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cat [OPTION]… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;列出文件的内容，但配合&lt;code&gt;重定向符号&lt;/code&gt;有很多种用法。常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt 	列出&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt里的内容 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt   将后面输入的内容存入&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;高级指令&quot;&gt;&lt;a href=&quot;#高级指令&quot; class=&quot;headerlink&quot; title=&quot;高级指令&quot;&gt;&lt;/a&gt;高级指令&lt;/h2&gt;&lt;h3 id=&quot;find指令&quot;&gt;&lt;a href=&quot;#find指令&quot; class=&quot;headerlink&quot; title=&quot;find指令&quot;&gt;&lt;/a&gt;find指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path…] [expression]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是&lt;code&gt;[-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec]&lt;/code&gt;并不常用，因此指令可以简化为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;find [path…] [experssion]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该指令执行查找，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ find . -name file.txt    在当前目录下搜索文件file.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find . -name &lt;span class=&quot;string&quot;&gt;&quot;*.txt&quot;&lt;/span&gt;     在当前目录下搜索所有txt文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find . -perm &lt;span class=&quot;number&quot;&gt;755&lt;/span&gt;         在当前目录下查找权限为&lt;span class=&quot;number&quot;&gt;755&lt;/span&gt;的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;chmod指令&quot;&gt;&lt;a href=&quot;#chmod指令&quot; class=&quot;headerlink&quot; title=&quot;chmod指令&quot;&gt;&lt;/a&gt;chmod指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;chmod [OPTION]… MODE[,MODE]… FILE…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改一个或多个文件的权限，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chmod &lt;span class=&quot;number&quot;&gt;777&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt           将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt权限修改为&lt;span class=&quot;number&quot;&gt;777&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;￥ chmod a+x &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt    给两个文件的所有用户添加执行权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;要注意[ugoa]的含义。u-&amp;gt;owner, g-&amp;gt;group, o-&amp;gt;other, a-&amp;gt;all&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;grep指令&quot;&gt;&lt;a href=&quot;#grep指令&quot; class=&quot;headerlink&quot; title=&quot;grep指令&quot;&gt;&lt;/a&gt;grep指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; grep [OPTION]… PATTERN [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在FILE的每一行中，查找满足PATTERN的行并输出：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls | grep &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt        在当前路径中查找似乎否有&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ grep &lt;span class=&quot;string&quot;&gt;&#39;[^0-9]&#39;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.txt    在&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.txt种查找包含非数字的行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;awk指令&quot;&gt;&lt;a href=&quot;#awk指令&quot; class=&quot;headerlink&quot; title=&quot;awk指令&quot;&gt;&lt;/a&gt;awk指令&lt;/h3&gt;&lt;p&gt;awk 指令比较复杂，但是也特别灵活。今后有时间会详细写一下，这里只列举几个例子&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.csv -F, &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $7&amp;#125;&#39;&lt;/span&gt;  将文件&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.csv的每一行按照&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;分割，输出第七列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再来一个复杂的例子&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.csv | awk &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  BEGIN &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxCount = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FS = &quot;,&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count[$5]+=$13;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name[$5] = $7;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  END &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (c in count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (count[c] &amp;gt; maxCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maxCount = count[c];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        id = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print name[id];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果在2.csv种，第5列表示id，第7列表示名字，第13列表示销量。那么该代码表示找到总销量最多的id，并输出其中的一个名字。&lt;/p&gt;
&lt;p&gt;感觉awk写复杂了就是c语言代码了。&lt;/p&gt;
&lt;h3 id=&quot;cut指令&quot;&gt;&lt;a href=&quot;#cut指令&quot; class=&quot;headerlink&quot; title=&quot;cut指令&quot;&gt;&lt;/a&gt;cut指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; cut OPTION… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从文件中截取特订的列，常见的用法有：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;1 file.txt		将file.txt已逗号分隔，输出第一列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find -c1-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; file.txt		输出file.txt的前三列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;sed指令&quot;&gt;&lt;a href=&quot;#sed指令&quot; class=&quot;headerlink&quot; title=&quot;sed指令&quot;&gt;&lt;/a&gt;sed指令&lt;/h3&gt;&lt;p&gt;该指令也是一个比较复杂的指令，暂不介绍。&lt;/p&gt;
&lt;h2 id=&quot;系统指令&quot;&gt;&lt;a href=&quot;#系统指令&quot; class=&quot;headerlink&quot; title=&quot;系统指令&quot;&gt;&lt;/a&gt;系统指令&lt;/h2&gt;&lt;h3 id=&quot;ps指令&quot;&gt;&lt;a href=&quot;#ps指令&quot; class=&quot;headerlink&quot; title=&quot;ps指令&quot;&gt;&lt;/a&gt;ps指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; ps [OPTIONS]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看当前进程，通常和grep一起用：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ps | grep bash 	查看名为bash的进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;kill指令&quot;&gt;&lt;a href=&quot;#kill指令&quot; class=&quot;headerlink&quot; title=&quot;kill指令&quot;&gt;&lt;/a&gt;kill指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; kill [-s signal|-p] [–] pid…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向pid进程发送信号&lt;/p&gt;
&lt;h3 id=&quot;telent指令&quot;&gt;&lt;a href=&quot;#telent指令&quot; class=&quot;headerlink&quot; title=&quot;telent指令&quot;&gt;&lt;/a&gt;telent指令&lt;/h3&gt;&lt;p&gt;用于和主机通信的指令，通常用于诊断服务器&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ telent myhost.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ telent &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; myusername myhost.com:&lt;span class=&quot;number&quot;&gt;5555&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;parted指令&quot;&gt;&lt;a href=&quot;#parted指令&quot; class=&quot;headerlink&quot; title=&quot;parted指令&quot;&gt;&lt;/a&gt;parted指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;parted [options] [device [command [options…]…]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看或操作分区，常用的指令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ parted &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; 列出所有的磁盘分区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;常用Linux指令的学习与整理&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo简明教程</title>
    <link href="http://yoursite.com/2016/02/26/hexo-github-tutorial/"/>
    <id>http://yoursite.com/2016/02/26/hexo-github-tutorial/</id>
    <published>2016-02-27T03:21:12.000Z</published>
    <updated>2016-02-27T04:55:08.000Z</updated>
    
    <content type="html">&lt;p&gt;在这里，我将介绍如何使用Hexo在Github上搭建博客，也就是我们现在看到的博客。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;这里，主要介绍如何在windows系统上操作。但其实无论windows或是mac，其原理都是一样的&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;p&gt;安装&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.JS&lt;/a&gt;, &lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo安装与配置&quot;&gt;&lt;a href=&quot;#Hexo安装与配置&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装与配置&quot;&gt;&lt;/a&gt;Hexo安装与配置&lt;/h2&gt;&lt;h3 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h3&gt;&lt;p&gt;首先，我们要安装&lt;code&gt;Hexo&lt;/code&gt;。双击&lt;code&gt;Git Shell&lt;/code&gt;,输入如下&lt;code&gt;npm&lt;/code&gt;指令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化Hexo&quot;&gt;&lt;a href=&quot;#初始化Hexo&quot; class=&quot;headerlink&quot; title=&quot;初始化Hexo&quot;&gt;&lt;/a&gt;初始化Hexo&lt;/h3&gt;&lt;p&gt;安装完成后，找到一个目录用于存放博客，本文以&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;为例。执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装常用插件&quot;&gt;&lt;a href=&quot;#安装常用插件&quot; class=&quot;headerlink&quot; title=&quot;安装常用插件&quot;&gt;&lt;/a&gt;安装常用插件&lt;/h3&gt;&lt;p&gt;安装必要的插件可以简化今后博客的部署与生成。同样在&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;目录下，执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-index --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-archive --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-category --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-tag --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-server --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-heroku --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-rsync --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-openshift --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-renderer-marked@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-renderer-stylus@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-feed@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-sitemap@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看效果&quot;&gt;&lt;a href=&quot;#查看效果&quot; class=&quot;headerlink&quot; title=&quot;查看效果&quot;&gt;&lt;/a&gt;查看效果&lt;/h3&gt;&lt;p&gt;执行如下指令后，可以访问&lt;code&gt;localhost:4000&lt;/code&gt;查看博客效果。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意： 在我的机器中执行&lt;code&gt;hexo s&lt;/code&gt;无法访问博客。因此我执行的是&lt;code&gt;hexo s -p 3333&lt;/code&gt;，将端口号改为&lt;code&gt;3333&lt;/code&gt;。随后在&lt;code&gt;localhost:3333&lt;/code&gt;看到了博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;将Hexo部署到Github&quot;&gt;&lt;a href=&quot;#将Hexo部署到Github&quot; class=&quot;headerlink&quot; title=&quot;将Hexo部署到Github&quot;&gt;&lt;/a&gt;将Hexo部署到Github&lt;/h2&gt;&lt;h3 id=&quot;注册并设置Github&quot;&gt;&lt;a href=&quot;#注册并设置Github&quot; class=&quot;headerlink&quot; title=&quot;注册并设置Github&quot;&gt;&lt;/a&gt;注册并设置Github&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;访问&lt;a href=&quot;&quot;&gt;Github&lt;/a&gt;,注册一个用户。&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;New repository&lt;/code&gt;,设置&lt;code&gt;Repository name&lt;/code&gt;为&lt;code&gt;name.github.io&lt;/code&gt;，因为我的用户名为&lt;code&gt;jackqdyulei&lt;/code&gt;，所以我的&lt;code&gt;Repository name&lt;/code&gt;为&lt;code&gt;jackqdyulei.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Create repository&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;修改Hexo配置文件&quot;&gt;&lt;a href=&quot;#修改Hexo配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改Hexo配置文件&quot;&gt;&lt;/a&gt;修改Hexo配置文件&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;下，打开&lt;code&gt;_config.yml&lt;/code&gt;文件。在后面添加&lt;code&gt;deploy&lt;/code&gt;指令，具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/name/name.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的&lt;code&gt;name&lt;/code&gt;为&lt;code&gt;jackqdyulei&lt;/code&gt;,因此我的配置文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/jackqdyulei/jackqdyulei.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意&lt;code&gt;yml&lt;/code&gt;文件的格式，冒号后面一定要有一个空格！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;正式部署&quot;&gt;&lt;a href=&quot;#正式部署&quot; class=&quot;headerlink&quot; title=&quot;正式部署&quot;&gt;&lt;/a&gt;正式部署&lt;/h3&gt;&lt;p&gt;每次写完博客后，执行下面指令将博客部署到Github上，随后就可以访问&lt;code&gt;http://name.github.io/&lt;/code&gt;看效果。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Hexo指令学习&quot;&gt;&lt;a href=&quot;#Hexo指令学习&quot; class=&quot;headerlink&quot; title=&quot;Hexo指令学习&quot;&gt;&lt;/a&gt;Hexo指令学习&lt;/h2&gt;&lt;p&gt;想玩转Hexo指令，可以访问&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多博客的基础设置都可以在&lt;code&gt;_config.yml&lt;/code&gt;中修改，具体字段含义官方网站有讲过。&lt;/p&gt;
&lt;h2 id=&quot;Hexo进阶&quot;&gt;&lt;a href=&quot;#Hexo进阶&quot; class=&quot;headerlink&quot; title=&quot;Hexo进阶&quot;&gt;&lt;/a&gt;Hexo进阶&lt;/h2&gt;&lt;h3 id=&quot;更换主题&quot;&gt;&lt;a href=&quot;#更换主题&quot; class=&quot;headerlink&quot; title=&quot;更换主题&quot;&gt;&lt;/a&gt;更换主题&lt;/h3&gt;&lt;p&gt;原版的Hexo主题有些粗糙，我们可以在&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;寻找自己喜欢的主题。我选择的主题是&lt;a href=&quot;http://litten.github.io/2014/08/31/hexo-theme-yilia/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我是按照&lt;a href=&quot;http://litten.github.io/2014/08/31/hexo-theme-yilia/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个教程&lt;/a&gt;设置的主题。所有的主题存储在&lt;code&gt;hexo/themes&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;设置完毕后记得执行&lt;code&gt;hexo g&lt;/code&gt;去生成最终效果。&lt;/p&gt;
&lt;h3 id=&quot;设置多说评论&quot;&gt;&lt;a href=&quot;#设置多说评论&quot; class=&quot;headerlink&quot; title=&quot;设置多说评论&quot;&gt;&lt;/a&gt;设置多说评论&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注册多说&lt;/strong&gt;&lt;br&gt;将评论系统改为&lt;code&gt;多说&lt;/code&gt;，方便网友评论。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;注册用户，并点击&lt;code&gt;我要安装&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在&lt;a href=&quot;http://duoshuo.com/create-site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创建网址&lt;/a&gt;输入基本信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;站点网址&lt;/code&gt;设为你的Github地址，例如&lt;code&gt;http://jackqdyulei.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;记录下&lt;code&gt;多说域名&lt;/code&gt;，后面会用到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;修改主题配置文件&lt;/strong&gt;&lt;br&gt;进入到你所选主题的目录下，例如&lt;code&gt;hexo/themes/yilia&lt;/code&gt;。打开&lt;code&gt;_config.yml&lt;/code&gt;文件。&lt;/p&gt;
&lt;p&gt;找到里面&lt;code&gt;duoshuo&lt;/code&gt;的配置，修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;duoshuo: 多说域名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;duoshuo_shortname: 多说域名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的&lt;code&gt;多说域名&lt;/code&gt;为注册时设置的名称，例如我之前设置的为&lt;code&gt;jackqdyulei-github.duoshuo.com&lt;/code&gt;,那么在上面填入&lt;code&gt;jackqdyulei-github&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改评论代码&lt;/strong&gt;&lt;br&gt;修改&lt;code&gt;themes\landscape\layout\_partial\article.ejs&lt;/code&gt; 模板&lt;br&gt;将&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!index &amp;amp;&amp;amp; post.comments &amp;amp;&amp;amp; config.disqus_shortname)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;comments&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;//disqus.com/?ref_noscript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!index &amp;amp;&amp;amp; post.comments &amp;amp;&amp;amp; config.duoshuo_shortname)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;comments&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说评论框 start --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;ds-thread&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-thread-key&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.layout %&amp;gt;-&amp;lt;%= post.slug %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.title %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-url&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= page.permalink %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说评论框 end --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; duoshuoQuery = &amp;#123;short_name:&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;%= config.duoshuo_shortname %&amp;gt;&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ds = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.type = &lt;span class=&quot;string&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;;ds.async = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.src = (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.location.protocol == &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;http:&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;//static.duoshuo.com/embed.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.charset = &lt;span class=&quot;string&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;head&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]).appendChild(ds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 end --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;在这里，我将介绍如何使用Hexo在Github上搭建博客，也就是我们现在看到的博客。&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/02/25/hello-world/"/>
    <id>http://yoursite.com/2016/02/25/hello-world/</id>
    <published>2016-02-26T02:16:13.000Z</published>
    <updated>2016-02-27T05:27:33.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
