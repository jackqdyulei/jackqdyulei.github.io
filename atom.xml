<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lei YU&#39;s blog</title>
  <subtitle>Keep it simple, stupid</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-20T02:19:06.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lei YU</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学车考试科目一习题整理</title>
    <link href="http://yoursite.com/2016/05/17/driver-test/"/>
    <id>http://yoursite.com/2016/05/17/driver-test/</id>
    <published>2016-05-17T19:44:04.000Z</published>
    <updated>2016-05-20T02:19:06.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;知识要点&quot;&gt;&lt;a href=&quot;#知识要点&quot; class=&quot;headerlink&quot; title=&quot;知识要点&quot;&gt;&lt;/a&gt;知识要点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;驾驶机动车超车后立即开启右转向灯驶回原车道。&lt;ul&gt;
&lt;li&gt;不能立即，应在与被超车辆拉开必要的安全距离后，开启右转向灯驶回原车道 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;法规整理&quot;&gt;&lt;a href=&quot;#法规整理&quot; class=&quot;headerlink&quot; title=&quot;法规整理&quot;&gt;&lt;/a&gt;法规整理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法实施条例》第四十五条：机动车在道路上行驶不得超过限速标志、标线标明的速度。在没有限速标志、标线的道路上，机动车不得超过下列最高行驶速度：(一)没有道路中心线的道路，城市道路为每小时30公里，公路为每小时40公里；(二)同方向只有1条机动车道的道路，城市道路为每小时50公里，公路为每小时70公里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法实施条例》第四十六条：机动车行驶中遇到进出非机动车道，通过铁路道口、急弯路、窄路、窄桥时最高行驶速度不得超过每小时30公里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法》第四十三条：同车道行驶的机动车，后车应当与前车保持足以采取紧急制动措施的安全距离。有下列情形之一的，不得超车：（一）前车正在左转弯、掉头、超车的；（二）与对面来车有会车可能的；（三）前车为执行紧急任务的警车、消防车、救护车、工程救险车的；（四）行经铁路道口、交叉路口、窄桥、弯道、陡坡、隧道、人行横道、市区交通流量大的路段等没有超车条件的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;安全文明驾驶原则，后车条件许可超车，前车那就减速靠右行驶。&lt;/li&gt;
&lt;li&gt;夜间超车应提前开启左转向灯，并交替使用远、近光灯示意，提醒前车。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十七条：应当提前开启左转向灯、变换使用远、近光灯或者鸣喇叭。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在没有中心隔离设施或者没有中心线的道路上，在有障碍的路段，无障碍的一方先行；但有障碍的一方已驶入障碍路段而无障碍的一方未驶入时，有障碍的一方先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在没有中心隔离设施或者没有中心线的道路上，夜间会车应当在距相对方向来车150米以外改用近光灯，在窄路、窄桥与非机动车会车时应当使用近光灯。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在狭窄的坡路，上坡的一方先行；但下坡的一方已行至中途而上坡的一方未上坡时，下坡的一方先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第五十一条：机动车通过有交通信号灯控制的交叉路口，向右转弯遇有同车道前车正在等候放行信号时，依次停车等候。&lt;/li&gt;
&lt;li&gt;三个先行原则：转弯的机动车让直行的车辆先行，右方道路来车先行，右转弯车让左转弯车先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十四条：机动车行经漫水路或者漫水桥时，应当停车察明水情，确认安全后，低速通过。 &lt;/li&gt;
&lt;li&gt;白色的菱形没，那是人行横道预告，所以要减速防止撞到行人。 &lt;/li&gt;
&lt;li&gt;虚线位置可以掉头，实线是不能压的。 &lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十九条：机动车在有禁止掉头或者禁止左转弯标志、标线的地点以及在铁路道口、人行横道、桥梁、急弯、陡坡、隧道或者容易发生危险的路段，不得掉头。&lt;/li&gt;
&lt;li&gt;道路交通安全法实施条例》第六十条：机动车在道路上发生故障或者发生交通事故，妨碍交通又难以移动的，应当按照规定开启危险报警闪光灯并在车后50米至100米处设置警告标志，夜间还应当同时开启示廓灯和后位灯。  &lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十三条：交叉路口、铁路道口、急弯路、宽度不足4米的窄路、桥梁、陡坡、隧道以及距离上述地点50米以内的路段，不得停车。&lt;/li&gt;
&lt;li&gt;道路交通安全法实施条例》第六十三条：公共汽车站、急救站、加油站、消防栓或者消防队(站)门前以及距离上述地点30米以内的路段，除使用上述设施的以外，不得停车。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条：高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。在高速公路上行驶的小型载客汽车最高车速不得超过每小时120公里，其他机动车不得超过每小时100公里，摩托车不得超过每小时80公里。同方向有2条车道的，左侧车道的最低车速为每小时100公里；同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，按照道路限速标志标明的车速行驶。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第八十条：机动车在高速公路上行驶，车速超过每小时100公里时，应当与同车道前车保持100米以上的距离，车速低于每小时100公里时，与同车道前车距离可以适当缩短，但最小距离不得少于50米。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第八十一条：机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：(一)能见度小于200米时，开启雾灯、近光灯、示廓灯和前后位灯，车速不得超过每小时60公里，与同车道前车保持100米以上的距离；(二)能见度小于100米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时40公里，与同车道前车保持50米以上的距离；(三)能见度小于50米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时20公里，并从最近的出口尽快驶离高速公路。&lt;/li&gt;
&lt;li&gt;白色实线不能压，只能继续寻找下一个出口&lt;/li&gt;
&lt;li&gt;《道路交通安全法》第六十八条：机动车在高速公路上发生故障时，应当依照本法第五十二条的有关规定办理；但是，警告标志应当设置在故障车来车方向一百五十米以外，车上人员应当迅速转移到右侧路肩上或者应急车道内，并且迅速报警&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十二条：连续驾驶机动车超过4小时应停车休息，停车休息时间不少于20分钟。&lt;/li&gt;
&lt;li&gt;初次申领的机动车驾驶证的有效期为6年，每个记分周期均未达到12分的，换发10年。&lt;/li&gt;
&lt;li&gt;小型汽车（C1）准驾车型：小型、微型载客汽车以及轻型、微型载货汽车；轻型、微型专项作业车，小型、微型自动挡载客汽车以及轻型、微型自动挡载货汽车，低速载货汽车，三轮汽车。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第十条：机动车驾驶证有效期分为六年、十年和长期。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第十三条：初次申领机动车驾驶证的，可以申请准驾车型为城市公交车、大型货车、小型汽车、小型自动挡汽车、低速载货汽车、三轮汽车、残疾人专用小型自动挡载客汽车、普通三轮摩托车、普通二轮摩托车、轻便摩托车、轮式自行机械车、无轨电车、有轨电车的机动车驾驶证。&lt;/li&gt;
&lt;li&gt;申请城市公交车、大型货车、无轨电车或者有轨电车准驾车型的，在20周岁以上，50周岁以下&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十条：科目三道路驾驶技能和安全文明驾驶常识考试满分分别为100分，成绩分别达到90分的为合格。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十七条：在驾驶技能准考证明有效期内，科目二和科目三道路驾驶技能考试预约考试的次数不得超过五次。第五次预约考试仍不合格的，已考试合格的其他科目成绩作废。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十二条：驾驶技能准考证明的有效期为三年，申请人应当在有效期内完成科目二和科目三考试。未在有效期内完成考试的，已考试合格的科目成绩作废。&lt;/li&gt;
&lt;li&gt;《中华人民共和国刑法》第一百三十三条：违反交通运输管理法规，因而发生重大事故，致人重伤、死亡或者使公私财产遭受重大损失的，处三年以下有期徒刑或者拘役；交通运输肇事后逃逸或者有其他特别恶劣情节的，处三年以上七年以下有期徒刑；因逃逸致人死亡的，处七年以上有期徒刑。在道路上驾驶机动车追逐竞驶，情节恶劣的，或者在道路上醉酒驾驶机动车的，处拘役，并处罚金。有前款行为，同时构成其他犯罪的，依照处罚较重的规定定罪处罚&lt;/li&gt;
&lt;li&gt;2011年《中华人民共和国刑法修正案（八）》第二十二条：在刑法第一百三十三条后增加一条，作为第一百三十三条之一：“在道路上驾驶机动车追逐竞驶，情节恶劣的，或者在道路上醉酒驾驶机动车的，处拘役，并处罚金。&lt;/li&gt;
&lt;li&gt;《道路交通安全法》第九十一条：饮酒后驾驶机动车的，处暂扣六个月机动车驾驶证，并处一千元以上二千元以下罚款。因饮酒后驾驶机动车被处罚，再次饮酒后驾驶机动车的，处十日以下拘留，并处一千元以上二千元以下罚款，吊销机动车驾驶证。醉酒驾驶机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；五年内不得重新取得机动车驾驶证。饮酒后驾驶营运机动车的，处十五日拘留，并处五千元罚款，吊销机动车驾驶证，五年内不得重新取得机动车驾驶证。醉酒驾驶营运机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；十年内不得重新取得机动车驾驶证，重新取得机动车驾驶证后，不得驾驶营运机动车。饮酒后或者醉酒驾驶机动车发生重大交通事故，构成犯罪的，依法追究刑事责任，并由公安机关交通管理部门吊销机动车驾驶证，终生不得重新取得机动车驾驶证。饮酒后或者醉酒驾驶机动车发生重大交通事故，构成犯罪的，依法追究刑事责任，并由公安机关交通管理部门吊销机动车驾驶证，终生不得重新取得机动车驾驶证。&lt;/li&gt;
&lt;li&gt;道路交通安全法》第九十五条：上道路行驶的机动车未悬挂机动车号牌，未放置检验合格标志、保险标志，或者未随车携带行驶证、驾驶证的，公安机关交通管理部门应当扣留机动车，通知当事人提供相应的牌证、标志或者补办相应手续，并可以依照本法第九十条的规定予以处罚。&lt;/li&gt;
&lt;li&gt;《道路交通事故处理程序规定》第十三条：对应当自行撤离现场而未撤离的，交通警察应当责令当事人撤离现场；造成交通堵塞的，对驾驶人处以200元罚款；驾驶人有其他道路交通安全违法行为的，依法一并处罚。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第四十八条：机动车驾驶人应当于机动车驾驶证有效期满前九十日内，向机动车驾驶证核发地车辆管理所申请换证。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第四十九条：机动车驾驶人户籍迁出原车辆管理所管辖区的，应当向迁入地车辆管理所申请换证&lt;/li&gt;
&lt;li&gt;公安部令第123号》第五十一条：具有下列情形之一的，机动车驾驶人应当在三十日内到机动车驾驶证核发地车辆管理所申请换证：（一）在车辆管理所管辖区域内，机动车驾驶证记载的机动车驾驶人信息发生变化的；（二）机动车驾驶证损毁无法辨认的。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第五十五条：道路交通安全违法行为累积记分周期（即记分周期）为12个月，满分为12分，从机动车驾驶证初次领取之日起计算。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第六十三条：机动车驾驶人因服兵役、出国（境）等原因，无法在规定时间内办理驾驶证期满换证、审验、提交身体条：件证明的，可以向机动车驾驶证核发地车辆管理所申请延期办理。申请时应当填写申请表，并提交机动车驾驶人的身份证明、机动车驾驶证和延期事由证明。延期期限最长不超过三年。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第六十二条：年龄在60周岁以上的机动车驾驶人，应当每年进行一次身体检查，在记分周期结束后三十日内，提交县级或者部队团级以上医疗机构出具的有关身体条件的证明。&lt;/li&gt;
&lt;li&gt;2013年1月1日起施行的公安部123号令，已明确规定，大、中型客货车驾驶人每年参加审验，审验时自己申报身体条件情况。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第七十八条：隐瞒有关情况或者提供虚假材料申领机动车驾驶证的，申请人在一年内不得再次申领机动车驾驶证。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶与准驾车型不符的机动车的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，上道路行驶的机动车未悬挂机动车号牌的，或者故意遮挡、污损、不按规定安装机动车号牌的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车在高速公路或者城市快速路上违法占用应急车道行驶的，一次记6分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车违反道路交通信号灯通行的，一次记6分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车在高速公路上倒车、逆行、穿越中央分隔带掉头的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路上行驶超过规定时速20％以上或者在高速公路、城市快速路以外的道路上行驶超过规定时速50％以上，以及驾驶其他机动车行驶超过规定时速50%以上的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车不按照规定避让校车的，一次记6分。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六条已注册登记的机动车有下列情形之一的，机动车所有人应当向登记该机动车的公安机关交通管理部门申请变更登记：(一)改变机动车车身颜色的；(二)更换发动机的；(三)更换车身或者车架的；(四)因质量有问题，制造厂更换整车的；(五)营运机动车改为非营运机动车或者非营运机动车改为营运机动车的；(六)机动车所有人的住所迁出或者迁入公安机关交通管理部门管辖区域的。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第三十八条：黄灯亮时，已越过停止线的车辆可以继续通行；未经过停止线的则禁止继续通行。&lt;/li&gt;
&lt;li&gt;警告标志的颜色为黄色、黑边、黑图案，形状为等边三角形，顶角朝上&lt;/li&gt;
&lt;li&gt;警告标志十字路口，驾驶人谨慎慢行，注意横向来车&lt;/li&gt;
&lt;li&gt;安全头枕是保护颈椎的&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条：同方向有2条车道的，左侧车道的最低车速为每小时100公里；同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，技照道路限速标志标明的车速行驶。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条:高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。&lt;/li&gt;
&lt;li&gt;《中华人民共和国道路交通安全法实施条例》第八十一条：机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：能见度小于200米时，开启雾灯、近光灯、示廓灯和前后位灯，车速不得超过每小时60公里，与同车道前车保持100米以上的距离。&lt;/li&gt;
&lt;li&gt;醉酒驾驶是指车辆驾驶人员血液中的酒精含量大于或者等于80mg/100mL的驾驶行为。&lt;/li&gt;
&lt;li&gt;机动车驾驶证申领和使用规定》第六章，法律责任，第七十八条隐瞒有关情况或者提供虚假材料申领机动车驾驶证的，申请人在一年内不得再次申领机动车驾驶证。&lt;/li&gt;
&lt;li&gt;驾驶证遗失、损毁无法辨认时驾驶员应当向驾驶证核发地车辆管理所申请补发&lt;/li&gt;
&lt;li&gt;机动车驾驶证被依法扣押、扣留或者暂扣期间，机动车驾驶人不得申请补发。 &lt;/li&gt;
&lt;li&gt;根据《机动车驾驶证申领使用规定》第四十八条规定年龄在60周岁以上或者持有大型客车、牵引车、城市公交车、中型客车、大型货车、无轨电车、有轨电车准驾车型的机动车驾驶人，应当每年进行一次身体检查，在记分周期结束后十五日内，提交县级或者部队团级以上医疗机构出具的有关身体条件的证明。&lt;/li&gt;
&lt;li&gt;持有大型客车、牵引车、城市公交车、中型客车、大型货车驾驶证的驾驶人联系电话、从业单位等信息发生变化未及时申报变更信息的，公安机关交通管理部门处二十元以上二百元以下罚款。机动车驾驶人联系电话、联系地址等信息发生变化，应当在信息变更后三十日内，向驾驶证核发地车辆管理所备案。&lt;/li&gt;
&lt;li&gt;饮酒驾驶机动车辆，罚款1000元—2000元、记12分并暂扣驾照6个月；饮酒驾驶营运机动车，罚款5000元，记12分，处以15日以下拘留，并且5年内不得重新获得驾照。醉酒驾驶机动车辆，吊销驾照，5年内不得重新获取驾照，经过判决后处以拘役，并处罚金；醉酒驾驶营运机动车辆，吊销驾照，10年内不得重新获取驾照，终生不得驾驶营运车辆，经过判决后处以拘役，并处罚金。 &lt;h2 id=&quot;错误题目&quot;&gt;&lt;a href=&quot;#错误题目&quot; class=&quot;headerlink&quot; title=&quot;错误题目&quot;&gt;&lt;/a&gt;错误题目&lt;/h2&gt;222，223，226，240，255，256，267，285，293，322，323，328，333，338，339，341，344，348，349，356，358，362，377，394，399，400，407，409，411，417，418，427，428，430，435，437，442，444，446，452，454，466，468，470，476，484，487，489，490，492，493，494，505，506，509，510，512，514，515，525，527，536，537，538，542，548，549，552，554，560，568，569，573，579，580，582，587，588，589，594，595，604，608，610，612，616，618，622，623，624，626，628，629，641，643，644，654，657，658，659，664，666，667，670，673，676，681，684，688，698，703，722，733，734，789，797，798，805，814，829，834，839，843，848，854，865，867，873，879，880，882，884，885，888，891，893，894，895，903，910，915，916，918，922，924，926，934，937，941，948，952，960，962，965，966，967，968，969，972，993&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1002，1004，1019，1030，1031，1032，1034，1041，1058，1071，1080，1087，1095，1116，1124，1127，1128，1130，1132，1136，1143，1144，1148，1151，1153，1155，1157，1159，1163，1171，1174，1188，1193，1200，1220，1235，1239，1255，1260，1267，1269，1270，1272，1281，1283，1284，1288，1289，1298&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;知识要点&quot;&gt;&lt;a href=&quot;#知识要点&quot; class=&quot;headerlink&quot; title=&quot;知识要点&quot;&gt;&lt;/a&gt;知识要点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;驾驶机动车超车后立即开启右转向灯驶回原车道。&lt;ul&gt;
&lt;li&gt;不能立即，应在与被超车辆拉开必要的安全距离后，开启右转向灯驶回原车道 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;法规整理&quot;&gt;&lt;a href=&quot;#法规整理&quot; class=&quot;headerlink&quot; title=&quot;法规整理&quot;&gt;&lt;/a&gt;法规整理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法实施条例》第四十五条：机动车在道路上行驶不得超过限速标志、标线标明的速度。在没有限速标志、标线的道路上，机动车不得超过下列最高行驶速度：(一)没有道路中心线的道路，城市道路为每小时30公里，公路为每小时40公里；(二)同方向只有1条机动车道的道路，城市道路为每小时50公里，公路为每小时70公里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法实施条例》第四十六条：机动车行驶中遇到进出非机动车道，通过铁路道口、急弯路、窄路、窄桥时最高行驶速度不得超过每小时30公里。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;《道路交通安全法》第四十三条：同车道行驶的机动车，后车应当与前车保持足以采取紧急制动措施的安全距离。有下列情形之一的，不得超车：（一）前车正在左转弯、掉头、超车的；（二）与对面来车有会车可能的；（三）前车为执行紧急任务的警车、消防车、救护车、工程救险车的；（四）行经铁路道口、交叉路口、窄桥、弯道、陡坡、隧道、人行横道、市区交通流量大的路段等没有超车条件的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;安全文明驾驶原则，后车条件许可超车，前车那就减速靠右行驶。&lt;/li&gt;
&lt;li&gt;夜间超车应提前开启左转向灯，并交替使用远、近光灯示意，提醒前车。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十七条：应当提前开启左转向灯、变换使用远、近光灯或者鸣喇叭。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在没有中心隔离设施或者没有中心线的道路上，在有障碍的路段，无障碍的一方先行；但有障碍的一方已驶入障碍路段而无障碍的一方未驶入时，有障碍的一方先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在没有中心隔离设施或者没有中心线的道路上，夜间会车应当在距相对方向来车150米以外改用近光灯，在窄路、窄桥与非机动车会车时应当使用近光灯。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十八条：在狭窄的坡路，上坡的一方先行；但下坡的一方已行至中途而上坡的一方未上坡时，下坡的一方先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第五十一条：机动车通过有交通信号灯控制的交叉路口，向右转弯遇有同车道前车正在等候放行信号时，依次停车等候。&lt;/li&gt;
&lt;li&gt;三个先行原则：转弯的机动车让直行的车辆先行，右方道路来车先行，右转弯车让左转弯车先行。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十四条：机动车行经漫水路或者漫水桥时，应当停车察明水情，确认安全后，低速通过。 &lt;/li&gt;
&lt;li&gt;白色的菱形没，那是人行横道预告，所以要减速防止撞到行人。 &lt;/li&gt;
&lt;li&gt;虚线位置可以掉头，实线是不能压的。 &lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第四十九条：机动车在有禁止掉头或者禁止左转弯标志、标线的地点以及在铁路道口、人行横道、桥梁、急弯、陡坡、隧道或者容易发生危险的路段，不得掉头。&lt;/li&gt;
&lt;li&gt;道路交通安全法实施条例》第六十条：机动车在道路上发生故障或者发生交通事故，妨碍交通又难以移动的，应当按照规定开启危险报警闪光灯并在车后50米至100米处设置警告标志，夜间还应当同时开启示廓灯和后位灯。  &lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十三条：交叉路口、铁路道口、急弯路、宽度不足4米的窄路、桥梁、陡坡、隧道以及距离上述地点50米以内的路段，不得停车。&lt;/li&gt;
&lt;li&gt;道路交通安全法实施条例》第六十三条：公共汽车站、急救站、加油站、消防栓或者消防队(站)门前以及距离上述地点30米以内的路段，除使用上述设施的以外，不得停车。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条：高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。在高速公路上行驶的小型载客汽车最高车速不得超过每小时120公里，其他机动车不得超过每小时100公里，摩托车不得超过每小时80公里。同方向有2条车道的，左侧车道的最低车速为每小时100公里；同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，按照道路限速标志标明的车速行驶。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第八十条：机动车在高速公路上行驶，车速超过每小时100公里时，应当与同车道前车保持100米以上的距离，车速低于每小时100公里时，与同车道前车距离可以适当缩短，但最小距离不得少于50米。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第八十一条：机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：(一)能见度小于200米时，开启雾灯、近光灯、示廓灯和前后位灯，车速不得超过每小时60公里，与同车道前车保持100米以上的距离；(二)能见度小于100米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时40公里，与同车道前车保持50米以上的距离；(三)能见度小于50米时，开启雾灯、近光灯、示廓灯、前后位灯和危险报警闪光灯，车速不得超过每小时20公里，并从最近的出口尽快驶离高速公路。&lt;/li&gt;
&lt;li&gt;白色实线不能压，只能继续寻找下一个出口&lt;/li&gt;
&lt;li&gt;《道路交通安全法》第六十八条：机动车在高速公路上发生故障时，应当依照本法第五十二条的有关规定办理；但是，警告标志应当设置在故障车来车方向一百五十米以外，车上人员应当迅速转移到右侧路肩上或者应急车道内，并且迅速报警&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六十二条：连续驾驶机动车超过4小时应停车休息，停车休息时间不少于20分钟。&lt;/li&gt;
&lt;li&gt;初次申领的机动车驾驶证的有效期为6年，每个记分周期均未达到12分的，换发10年。&lt;/li&gt;
&lt;li&gt;小型汽车（C1）准驾车型：小型、微型载客汽车以及轻型、微型载货汽车；轻型、微型专项作业车，小型、微型自动挡载客汽车以及轻型、微型自动挡载货汽车，低速载货汽车，三轮汽车。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第十条：机动车驾驶证有效期分为六年、十年和长期。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第十三条：初次申领机动车驾驶证的，可以申请准驾车型为城市公交车、大型货车、小型汽车、小型自动挡汽车、低速载货汽车、三轮汽车、残疾人专用小型自动挡载客汽车、普通三轮摩托车、普通二轮摩托车、轻便摩托车、轮式自行机械车、无轨电车、有轨电车的机动车驾驶证。&lt;/li&gt;
&lt;li&gt;申请城市公交车、大型货车、无轨电车或者有轨电车准驾车型的，在20周岁以上，50周岁以下&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十条：科目三道路驾驶技能和安全文明驾驶常识考试满分分别为100分，成绩分别达到90分的为合格。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十七条：在驾驶技能准考证明有效期内，科目二和科目三道路驾驶技能考试预约考试的次数不得超过五次。第五次预约考试仍不合格的，已考试合格的其他科目成绩作废。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第三十二条：驾驶技能准考证明的有效期为三年，申请人应当在有效期内完成科目二和科目三考试。未在有效期内完成考试的，已考试合格的科目成绩作废。&lt;/li&gt;
&lt;li&gt;《中华人民共和国刑法》第一百三十三条：违反交通运输管理法规，因而发生重大事故，致人重伤、死亡或者使公私财产遭受重大损失的，处三年以下有期徒刑或者拘役；交通运输肇事后逃逸或者有其他特别恶劣情节的，处三年以上七年以下有期徒刑；因逃逸致人死亡的，处七年以上有期徒刑。在道路上驾驶机动车追逐竞驶，情节恶劣的，或者在道路上醉酒驾驶机动车的，处拘役，并处罚金。有前款行为，同时构成其他犯罪的，依照处罚较重的规定定罪处罚&lt;/li&gt;
&lt;li&gt;2011年《中华人民共和国刑法修正案（八）》第二十二条：在刑法第一百三十三条后增加一条，作为第一百三十三条之一：“在道路上驾驶机动车追逐竞驶，情节恶劣的，或者在道路上醉酒驾驶机动车的，处拘役，并处罚金。&lt;/li&gt;
&lt;li&gt;《道路交通安全法》第九十一条：饮酒后驾驶机动车的，处暂扣六个月机动车驾驶证，并处一千元以上二千元以下罚款。因饮酒后驾驶机动车被处罚，再次饮酒后驾驶机动车的，处十日以下拘留，并处一千元以上二千元以下罚款，吊销机动车驾驶证。醉酒驾驶机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；五年内不得重新取得机动车驾驶证。饮酒后驾驶营运机动车的，处十五日拘留，并处五千元罚款，吊销机动车驾驶证，五年内不得重新取得机动车驾驶证。醉酒驾驶营运机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；十年内不得重新取得机动车驾驶证，重新取得机动车驾驶证后，不得驾驶营运机动车。饮酒后或者醉酒驾驶机动车发生重大交通事故，构成犯罪的，依法追究刑事责任，并由公安机关交通管理部门吊销机动车驾驶证，终生不得重新取得机动车驾驶证。饮酒后或者醉酒驾驶机动车发生重大交通事故，构成犯罪的，依法追究刑事责任，并由公安机关交通管理部门吊销机动车驾驶证，终生不得重新取得机动车驾驶证。&lt;/li&gt;
&lt;li&gt;道路交通安全法》第九十五条：上道路行驶的机动车未悬挂机动车号牌，未放置检验合格标志、保险标志，或者未随车携带行驶证、驾驶证的，公安机关交通管理部门应当扣留机动车，通知当事人提供相应的牌证、标志或者补办相应手续，并可以依照本法第九十条的规定予以处罚。&lt;/li&gt;
&lt;li&gt;《道路交通事故处理程序规定》第十三条：对应当自行撤离现场而未撤离的，交通警察应当责令当事人撤离现场；造成交通堵塞的，对驾驶人处以200元罚款；驾驶人有其他道路交通安全违法行为的，依法一并处罚。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第四十八条：机动车驾驶人应当于机动车驾驶证有效期满前九十日内，向机动车驾驶证核发地车辆管理所申请换证。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第四十九条：机动车驾驶人户籍迁出原车辆管理所管辖区的，应当向迁入地车辆管理所申请换证&lt;/li&gt;
&lt;li&gt;公安部令第123号》第五十一条：具有下列情形之一的，机动车驾驶人应当在三十日内到机动车驾驶证核发地车辆管理所申请换证：（一）在车辆管理所管辖区域内，机动车驾驶证记载的机动车驾驶人信息发生变化的；（二）机动车驾驶证损毁无法辨认的。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第五十五条：道路交通安全违法行为累积记分周期（即记分周期）为12个月，满分为12分，从机动车驾驶证初次领取之日起计算。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第六十三条：机动车驾驶人因服兵役、出国（境）等原因，无法在规定时间内办理驾驶证期满换证、审验、提交身体条：件证明的，可以向机动车驾驶证核发地车辆管理所申请延期办理。申请时应当填写申请表，并提交机动车驾驶人的身份证明、机动车驾驶证和延期事由证明。延期期限最长不超过三年。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第六十二条：年龄在60周岁以上的机动车驾驶人，应当每年进行一次身体检查，在记分周期结束后三十日内，提交县级或者部队团级以上医疗机构出具的有关身体条件的证明。&lt;/li&gt;
&lt;li&gt;2013年1月1日起施行的公安部123号令，已明确规定，大、中型客货车驾驶人每年参加审验，审验时自己申报身体条件情况。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》第七十八条：隐瞒有关情况或者提供虚假材料申领机动车驾驶证的，申请人在一年内不得再次申领机动车驾驶证。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶与准驾车型不符的机动车的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，上道路行驶的机动车未悬挂机动车号牌的，或者故意遮挡、污损、不按规定安装机动车号牌的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车在高速公路或者城市快速路上违法占用应急车道行驶的，一次记6分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车违反道路交通信号灯通行的，一次记6分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车在高速公路上倒车、逆行、穿越中央分隔带掉头的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶中型以上载客载货汽车、校车、危险物品运输车辆在高速公路、城市快速路上行驶超过规定时速20％以上或者在高速公路、城市快速路以外的道路上行驶超过规定时速50％以上，以及驾驶其他机动车行驶超过规定时速50%以上的，一次记12分。&lt;/li&gt;
&lt;li&gt;《公安部令第123号》附件2，驾驶机动车不按照规定避让校车的，一次记6分。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第六条已注册登记的机动车有下列情形之一的，机动车所有人应当向登记该机动车的公安机关交通管理部门申请变更登记：(一)改变机动车车身颜色的；(二)更换发动机的；(三)更换车身或者车架的；(四)因质量有问题，制造厂更换整车的；(五)营运机动车改为非营运机动车或者非营运机动车改为营运机动车的；(六)机动车所有人的住所迁出或者迁入公安机关交通管理部门管辖区域的。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第三十八条：黄灯亮时，已越过停止线的车辆可以继续通行；未经过停止线的则禁止继续通行。&lt;/li&gt;
&lt;li&gt;警告标志的颜色为黄色、黑边、黑图案，形状为等边三角形，顶角朝上&lt;/li&gt;
&lt;li&gt;警告标志十字路口，驾驶人谨慎慢行，注意横向来车&lt;/li&gt;
&lt;li&gt;安全头枕是保护颈椎的&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条：同方向有2条车道的，左侧车道的最低车速为每小时100公里；同方向有3条以上车道的，最左侧车道的最低车速为每小时110公里，中间车道的最低车速为每小时90公里。道路限速标志标明的车速与上述车道行驶车速的规定不一致的，技照道路限速标志标明的车速行驶。&lt;/li&gt;
&lt;li&gt;《道路交通安全法实施条例》第七十八条:高速公路应当标明车道的行驶速度，最高车速不得超过每小时120公里，最低车速不得低于每小时60公里。&lt;/li&gt;
&lt;li&gt;《中华人民共和国道路交通安全法实施条例》第八十一条：机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：能见度小于200米时，开启雾灯、近光灯、示廓灯和前后位灯，车速不得超过每小时60公里，与同车道前车保持100米以上的距离。&lt;/li&gt;
&lt;li&gt;醉酒驾驶是指车辆驾驶人员血液中的酒精含量大于或者等于80mg/100mL的驾驶行为。&lt;/li&gt;
&lt;li&gt;机动车驾驶证申领和使用规定》第六章，法律责任，第七十八条隐瞒有关情况或者提供虚假材料申领机动车驾驶证的，申请人在一年内不得再次申领机动车驾驶证。&lt;/li&gt;
&lt;li&gt;驾驶证遗失、损毁无法辨认时驾驶员应当向驾驶证核发地车辆管理所申请补发&lt;/li&gt;
&lt;li&gt;机动车驾驶证被依法扣押、扣留或者暂扣期间，机动车驾驶人不得申请补发。 &lt;/li&gt;
&lt;li&gt;根据《机动车驾驶证申领使用规定》第四十八条规定年龄在60周岁以上或者持有大型客车、牵引车、城市公交车、中型客车、大型货车、无轨电车、有轨电车准驾车型的机动车驾驶人，应当每年进行一次身体检查，在记分周期结束后十五日内，提交县级或者部队团级以上医疗机构出具的有关身体条件的证明。&lt;/li&gt;
&lt;li&gt;持有大型客车、牵引车、城市公交车、中型客车、大型货车驾驶证的驾驶人联系电话、从业单位等信息发生变化未及时申报变更信息的，公安机关交通管理部门处二十元以上二百元以下罚款。机动车驾驶人联系电话、联系地址等信息发生变化，应当在信息变更后三十日内，向驾驶证核发地车辆管理所备案。&lt;/li&gt;
&lt;li&gt;饮酒驾驶机动车辆，罚款1000元—2000元、记12分并暂扣驾照6个月；饮酒驾驶营运机动车，罚款5000元，记12分，处以15日以下拘留，并且5年内不得重新获得驾照。醉酒驾驶机动车辆，吊销驾照，5年内不得重新获取驾照，经过判决后处以拘役，并处罚金；醉酒驾驶营运机动车辆，吊销驾照，10年内不得重新获取驾照，终生不得驾驶营运车辆，经过判决后处以拘役，并处罚金。 &lt;h2 id=&quot;错误题目&quot;&gt;&lt;a href=&quot;#错误题目&quot; class=&quot;headerlink&quot; title=&quot;错误题目&quot;&gt;&lt;/a&gt;错误题目&lt;/h2&gt;222，223，226，240，255，256，267，285，293，322，323，328，333，338，339，341，344，348，349，356，358，362，377，394，399，400，407，409，411，417，418，427，428，430，435，437，442，444，446，452，454，466，468，470，476，484，487，489，490，492，493，494，505，506，509，510，512，514，515，525，527，536，537，538，542，548，549，552，554，560，568，569，573，579，580，582，587，588，589，594，595，604，608，610，612，616，618，622，623，624，626，628，629，641，643，644，654，657，658，659，664，666，667，670，673，676，681，684，688，698，703，722，733，734，789，797，798，805，814，829，834，839，843，848，854，865，867，873，879，880，882，884，885，888，891，893，894，895，903，910，915，916，918，922，924，926，934，937，941，948，952，960，962，965，966，967，968，969，972，993&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1002，1004，1019，1030，1031，1032，1034，1041，1058，1071，1080，1087，1095，1116，1124，1127，1128，1130，1132，1136，1143，1144，1148，1151，1153，1155，1157，1159，1163，1171，1174，1188，1193，1200，1220，1235，1239，1255，1260，1267，1269，1270，1272，1281，1283，1284，1288，1289，1298&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>final-18653</title>
    <link href="http://yoursite.com/2016/05/01/18653-final/"/>
    <id>http://yoursite.com/2016/05/01/18653-final/</id>
    <published>2016-05-01T12:25:14.000Z</published>
    <updated>2016-05-01T14:54:07.000Z</updated>
    
    <content type="html">&lt;p&gt;有关18653-Software Architecture and Design的期末考试复习&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;总体介绍&quot;&gt;&lt;a href=&quot;#总体介绍&quot; class=&quot;headerlink&quot; title=&quot;总体介绍&quot;&gt;&lt;/a&gt;总体介绍&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Basic concepts&lt;/li&gt;
&lt;li&gt;Architectural styles&lt;/li&gt;
&lt;li&gt;Design patterns&lt;/li&gt;
&lt;li&gt;ATAM&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Basic-concepts&quot;&gt;&lt;a href=&quot;#Basic-concepts&quot; class=&quot;headerlink&quot; title=&quot;Basic concepts&quot;&gt;&lt;/a&gt;Basic concepts&lt;/h1&gt;&lt;h2 id=&quot;Architecture-Standards&quot;&gt;&lt;a href=&quot;#Architecture-Standards&quot; class=&quot;headerlink&quot; title=&quot;Architecture Standards&quot;&gt;&lt;/a&gt;Architecture Standards&lt;/h2&gt;&lt;h3 id=&quot;What-are-Standards&quot;&gt;&lt;a href=&quot;#What-are-Standards&quot; class=&quot;headerlink&quot; title=&quot;What are Standards&quot;&gt;&lt;/a&gt;What are Standards&lt;/h3&gt;&lt;p&gt;A form of agreement between parties. There are many kinds of standards, such as notations, tools, processes…&lt;/p&gt;
&lt;h3 id=&quot;Pros-and-cons-of-standards&quot;&gt;&lt;a href=&quot;#Pros-and-cons-of-standards&quot; class=&quot;headerlink&quot; title=&quot;Pros and cons of standards&quot;&gt;&lt;/a&gt;Pros and cons of standards&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Why use standards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To ensure &lt;code&gt;interoperability&lt;/code&gt; between products developed by different organizations&lt;/li&gt;
&lt;li&gt;To carry hard-won engineering knowledge from one project to another&lt;/li&gt;
&lt;li&gt;As an effort to attract tool vendors&lt;/li&gt;
&lt;li&gt;To attempt to control the standard’s evolution in your favor&lt;br&gt;&lt;strong&gt;Drawbacks of standards&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Limits your agility&lt;/li&gt;
&lt;li&gt;Standards often attempt to apply the same techniques to a too-broad variety of situations&lt;/li&gt;
&lt;li&gt;The most widely adopted standards are often the most general&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Pros-and-cons-of-early-adoption-早期采用Standards的优劣&quot;&gt;&lt;a href=&quot;#Pros-and-cons-of-early-adoption-早期采用Standards的优劣&quot; class=&quot;headerlink&quot; title=&quot;Pros and cons of early adoption(早期采用Standards的优劣)&quot;&gt;&lt;/a&gt;Pros and cons of early adoption(早期采用Standards的优劣)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improved ability to influence the standard&lt;/li&gt;
&lt;li&gt;Early to market.(If standard becomes successful, early marketers will profit)&lt;/li&gt;
&lt;li&gt;Early experience&lt;br&gt;&lt;strong&gt;Drawbacks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Risk of failure&lt;/li&gt;
&lt;li&gt;Moving target(Early standards tend to evolve, and maybe &lt;code&gt;buggy&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Lack of support&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Prevalent-Architectural-Standards&quot;&gt;&lt;a href=&quot;#Prevalent-Architectural-Standards&quot; class=&quot;headerlink&quot; title=&quot;Prevalent Architectural Standards&quot;&gt;&lt;/a&gt;Prevalent Architectural Standards&lt;/h3&gt;&lt;h4 id=&quot;IEEE-1471&quot;&gt;&lt;a href=&quot;#IEEE-1471&quot; class=&quot;headerlink&quot; title=&quot;IEEE 1471&quot;&gt;&lt;/a&gt;IEEE 1471&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Recommended practice for architecture description&lt;/li&gt;
&lt;li&gt;Scope is limited to architecture descriptions&lt;/li&gt;
&lt;li&gt;Identifies the importance of stakeholders and advocates models that are tailored to stakeholder needs&lt;/li&gt;
&lt;li&gt;Very high level and useful as a starting point&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;DoDAF&quot;&gt;&lt;a href=&quot;#DoDAF&quot; class=&quot;headerlink&quot; title=&quot;DoDAF&quot;&gt;&lt;/a&gt;DoDAF&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Basic Knowledge&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Short for &lt;code&gt;Department of Defense Architecture Framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Contains three views, and identifies specific viewpoints that should be captured&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Operational View&lt;/strong&gt;: Identifies what needs to be accomplished, and who does it&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System View&lt;/strong&gt;: Describe the systems that provide or support operational functions and interconnections between them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Technical Standards View&lt;/strong&gt;: Identify standards, (engineering) guidelines, rules, conventions, and other documents&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Takes a high-level organizational perspective&lt;/li&gt;
&lt;li&gt;Tells us a lot about WHAT to model, but nearly nothing about HOW to model it&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;TOGAF&quot;&gt;&lt;a href=&quot;#TOGAF&quot; class=&quot;headerlink&quot; title=&quot;TOGAF&quot;&gt;&lt;/a&gt;TOGAF&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Basic Knowledge&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Short for &lt;code&gt;The Open Group Architecture Framework&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;enterprise architecture&lt;/code&gt; framework&lt;ul&gt;
&lt;li&gt;Focus beyond hardware/software&lt;/li&gt;
&lt;li&gt;How can enterprises build systems to achieve business goals&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Four key areas addressed&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Business concerns&lt;/strong&gt;: address business strategies, organizations, and processes;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application concerns&lt;/strong&gt;: address applications to be deployed, their interactions, and their relationships to business processes;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data concerns&lt;/strong&gt;: address the structure of physical and logical data assets of an organization and the resources that manage these assets; and&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Technology concerns&lt;/strong&gt;: address issues of infrastructure and middleware.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;UML&quot;&gt;&lt;a href=&quot;#UML&quot; class=&quot;headerlink&quot; title=&quot;UML&quot;&gt;&lt;/a&gt;UML&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Basic Knowledge&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Short for &lt;code&gt;Unified Modeling Language&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A general-purpose, developmental, modeling language in the field of software engineering(WIKI)&lt;/li&gt;
&lt;li&gt;Provide a common syntactic framework to express many common types of design decisions&lt;/li&gt;
&lt;li&gt;Documenting a system in UML does not ensure overall system quality&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Microservices&quot;&gt;&lt;a href=&quot;#Microservices&quot; class=&quot;headerlink&quot; title=&quot;Microservices&quot;&gt;&lt;/a&gt;Microservices&lt;/h2&gt;&lt;h3 id=&quot;Software-monolith&quot;&gt;&lt;a href=&quot;#Software-monolith&quot; class=&quot;headerlink&quot; title=&quot;Software monolith&quot;&gt;&lt;/a&gt;Software monolith&lt;/h3&gt;&lt;h4 id=&quot;Defination&quot;&gt;&lt;a href=&quot;#Defination&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A Software Monolith is a system that has&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One build and deployment unit&lt;/li&gt;
&lt;li&gt;One code base&lt;/li&gt;
&lt;li&gt;One technology stack&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Pros-and-Cons&quot;&gt;&lt;a href=&quot;#Pros-and-Cons&quot; class=&quot;headerlink&quot; title=&quot;Pros and Cons&quot;&gt;&lt;/a&gt;Pros and Cons&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple mental model for developers&lt;/li&gt;
&lt;li&gt;Simple scaling model for operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Drawbacks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Huge and intimidating code base for developers&lt;/li&gt;
&lt;li&gt;Development tools get overburdened&lt;/li&gt;
&lt;li&gt;Scaling is limited&lt;ul&gt;
&lt;li&gt;Running acopy of the whole systemis resource-intense&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deployment frequency is limited&lt;ul&gt;
&lt;li&gt;Re-deploying means halting the whole system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Microservices-1&quot;&gt;&lt;a href=&quot;#Microservices-1&quot; class=&quot;headerlink&quot; title=&quot;Microservices&quot;&gt;&lt;/a&gt;Microservices&lt;/h3&gt;&lt;h4 id=&quot;Defination-1&quot;&gt;&lt;a href=&quot;#Defination-1&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A microservices architecture puts each element of functionality into a separate service…&lt;/p&gt;
&lt;h4 id=&quot;Pros-and-Cons-1&quot;&gt;&lt;a href=&quot;#Pros-and-Cons-1&quot; class=&quot;headerlink&quot; title=&quot;Pros and Cons&quot;&gt;&lt;/a&gt;Pros and Cons&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simple and lightweight&lt;/li&gt;
&lt;li&gt;services decoupled, easy to scaling and re-deploying&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Drawbacks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;API cannot be changed between microservices&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;SOA-vs-Microservices&quot;&gt;&lt;a href=&quot;#SOA-vs-Microservices&quot; class=&quot;headerlink&quot; title=&quot;SOA vs Microservices&quot;&gt;&lt;/a&gt;SOA vs Microservices&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SOA&lt;/strong&gt;&lt;br&gt;Focus on functionla decomposition, but&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;services are not required to be self-contained with data and UI&lt;/li&gt;
&lt;li&gt;It is often thought as decomposition within tiers&lt;/li&gt;
&lt;li&gt;does not focus on independent deployment units&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Microservices&lt;/strong&gt;&lt;br&gt;can be seen as &lt;code&gt;SOA-the good parts&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;Why-SOA-is-moving-toward-microservices-PPT上没找到-自己整理的&quot;&gt;&lt;a href=&quot;#Why-SOA-is-moving-toward-microservices-PPT上没找到-自己整理的&quot; class=&quot;headerlink&quot; title=&quot;Why SOA is moving toward microservices(PPT上没找到,自己整理的)&quot;&gt;&lt;/a&gt;Why SOA is moving toward microservices(PPT上没找到,自己整理的)&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Microservices are the first post-DevOps revolution architecture.&lt;/li&gt;
&lt;li&gt;Microservices make change less expensive.&lt;/li&gt;
&lt;li&gt;Microservices enable unique opportunities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Some-discussions-of-using-Spring-Cloud-for-SOC-project&quot;&gt;&lt;a href=&quot;#Some-discussions-of-using-Spring-Cloud-for-SOC-project&quot; class=&quot;headerlink&quot; title=&quot;Some discussions of using Spring Cloud for SOC project.&quot;&gt;&lt;/a&gt;Some discussions of using Spring Cloud for SOC project.&lt;/h4&gt;&lt;p&gt;看作业&lt;/p&gt;
&lt;h2 id=&quot;Design-patterns&quot;&gt;&lt;a href=&quot;#Design-patterns&quot; class=&quot;headerlink&quot; title=&quot;Design patterns&quot;&gt;&lt;/a&gt;Design patterns&lt;/h2&gt;&lt;p&gt;具体见另一篇Blog，总之要理解所有的设计模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand every design pattern&lt;/li&gt;
&lt;li&gt;Study homework &amp;amp; projects&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Architectural-Styles&quot;&gt;&lt;a href=&quot;#Architectural-Styles&quot; class=&quot;headerlink&quot; title=&quot;Architectural Styles&quot;&gt;&lt;/a&gt;Architectural Styles&lt;/h2&gt;&lt;p&gt;具体见另一篇Blog&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand every style&lt;/li&gt;
&lt;li&gt;Study homework &amp;amp; projects&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Implementing-Architectures&quot;&gt;&lt;a href=&quot;#Implementing-Architectures&quot; class=&quot;headerlink&quot; title=&quot;Implementing Architectures&quot;&gt;&lt;/a&gt;Implementing Architectures&lt;/h2&gt;&lt;p&gt;Mapping problem of design decisions to implementation artifacts (code, executables, etc.)&lt;/p&gt;
&lt;h3 id=&quot;Common-Element-Mapping&quot;&gt;&lt;a href=&quot;#Common-Element-Mapping&quot; class=&quot;headerlink&quot; title=&quot;Common Element Mapping&quot;&gt;&lt;/a&gt;Common Element Mapping&lt;/h3&gt;&lt;h4 id=&quot;Components-and-Connectors&quot;&gt;&lt;a href=&quot;#Components-and-Connectors&quot; class=&quot;headerlink&quot; title=&quot;Components and Connectors&quot;&gt;&lt;/a&gt;Components and Connectors&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Partitions of application computation and&lt;br&gt;communication functionality&lt;/li&gt;
&lt;li&gt;Modules, packages, libraries, classes&lt;h4 id=&quot;Interfaces&quot;&gt;&lt;a href=&quot;#Interfaces&quot; class=&quot;headerlink&quot; title=&quot;Interfaces&quot;&gt;&lt;/a&gt;Interfaces&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;Programming-language level interfaces are common&lt;/li&gt;
&lt;li&gt;State machines or protocols are harder to map&lt;h4 id=&quot;Configurations&quot;&gt;&lt;a href=&quot;#Configurations&quot; class=&quot;headerlink&quot; title=&quot;Configurations&quot;&gt;&lt;/a&gt;Configurations&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;Interconnections, references, or dependencies&lt;br&gt;between functional partitions&lt;/li&gt;
&lt;li&gt;May be implicit in the implementation&lt;/li&gt;
&lt;li&gt;May involve use of reflection&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;One-way-vs-Round-Trip-mapping&quot;&gt;&lt;a href=&quot;#One-way-vs-Round-Trip-mapping&quot; class=&quot;headerlink&quot; title=&quot;One-way vs Round Trip mapping&quot;&gt;&lt;/a&gt;One-way vs Round Trip mapping&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;One-way mappings are easier&lt;ul&gt;
&lt;li&gt;Must be able to understand impact on implementation for an architectural design decision or change&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Two way mappings require more insight&lt;ul&gt;
&lt;li&gt;Must understand how a change in the implementation impacts architecture-level design decisions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Architecture-Implementation-Frameworks&quot;&gt;&lt;a href=&quot;#Architecture-Implementation-Frameworks&quot; class=&quot;headerlink&quot; title=&quot;Architecture Implementation Frameworks&quot;&gt;&lt;/a&gt;Architecture Implementation Frameworks&lt;/h3&gt;&lt;h4 id=&quot;Defination-2&quot;&gt;&lt;a href=&quot;#Defination-2&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;An architecture implementation framework is a piece of software that acts as a bridge between a particular architectural style and a set of implementation&lt;br&gt;technologies.&lt;/p&gt;
&lt;p&gt;It provides key elements of the architectural style in code, in a way that assists developers in implementing systems that conform to the prescriptions and constraints of the style.&lt;/p&gt;
&lt;h4 id=&quot;How-to-make-decision&quot;&gt;&lt;a href=&quot;#How-to-make-decision&quot; class=&quot;headerlink&quot; title=&quot;How to make decision&quot;&gt;&lt;/a&gt;How to make decision&lt;/h4&gt;&lt;p&gt;Evaluate frameworks&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Platform support&lt;/li&gt;
&lt;li&gt;Fidelity&lt;ul&gt;
&lt;li&gt;How much style-specific support is provided by the framework?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other quality considerations&lt;ul&gt;
&lt;li&gt;Size, Cost, ease of use, reliability, robustness, protability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Non-Functional-Properties-NFPs&quot;&gt;&lt;a href=&quot;#Non-Functional-Properties-NFPs&quot; class=&quot;headerlink&quot; title=&quot;Non-Functional Properties(NFPs)&quot;&gt;&lt;/a&gt;Non-Functional Properties(NFPs)&lt;/h3&gt;&lt;h4 id=&quot;Designing-for-Non-Functional-Properties-NFPs&quot;&gt;&lt;a href=&quot;#Designing-for-Non-Functional-Properties-NFPs&quot; class=&quot;headerlink&quot; title=&quot;Designing for Non-Functional Properties (NFPs)&quot;&gt;&lt;/a&gt;Designing for Non-Functional Properties (NFPs)&lt;/h4&gt;&lt;p&gt;A software system’s non-functional property (NFP) is a&lt;br&gt;constraint on the manner in which the system implements&lt;br&gt;and delivers its functionality&lt;/p&gt;
&lt;h4 id=&quot;Example-NFPs&quot;&gt;&lt;a href=&quot;#Example-NFPs&quot; class=&quot;headerlink&quot; title=&quot;Example NFPs&quot;&gt;&lt;/a&gt;Example NFPs&lt;/h4&gt;&lt;p&gt;– Efficiency&lt;br&gt;– Complexity&lt;br&gt;– Scalability&lt;br&gt;– Heterogeneity&lt;br&gt;– Adaptability&lt;br&gt;– Dependability&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有关18653-Software Architecture and Design的期末考试复习&lt;br&gt;
    
    </summary>
    
      <category term="course notes" scheme="http://yoursite.com/categories/course-notes/"/>
    
    
      <category term="18653" scheme="http://yoursite.com/tags/18653/"/>
    
  </entry>
  
  <entry>
    <title>设计模式</title>
    <link href="http://yoursite.com/2016/03/31/design-pattern/"/>
    <id>http://yoursite.com/2016/03/31/design-pattern/</id>
    <published>2016-03-31T17:57:22.000Z</published>
    <updated>2016-04-01T15:35:12.000Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍了GOF系列的设计模式&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;##Gang of Four(GOF)&lt;br&gt;可以翻译为四人帮，指得是四个人一起出了一本名为《Design Patterns - Elements of Reusable Object-Oriented Software》的书。书中介绍了设计模式的概念。&lt;/p&gt;
&lt;p&gt;设计模式，主要讲的是&lt;code&gt;可重用&lt;/code&gt;，&lt;code&gt;扩展性强&lt;/code&gt;，&lt;code&gt;优雅&lt;/code&gt;的解决问题的方法。他不是一个数据结构。相比于领域相关的设计，设计模式更贴近于代码层面的设计。&lt;/p&gt;
&lt;p&gt;感觉几乎所有的设计模式都离不开&lt;code&gt;接口&lt;/code&gt;和&lt;code&gt;继承&lt;/code&gt;这两个概念。&lt;/p&gt;
&lt;h2 id=&quot;Design-Patterns&quot;&gt;&lt;a href=&quot;#Design-Patterns&quot; class=&quot;headerlink&quot; title=&quot;Design Patterns&quot;&gt;&lt;/a&gt;Design Patterns&lt;/h2&gt;&lt;p&gt;基于GOF的设计模式可分为三部分，分别是&lt;code&gt;Creational Patterns&lt;/code&gt;,&lt;code&gt;Structural Patterns&lt;/code&gt;,&lt;code&gt;Behavioral Patterns&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果你是初学者,请参考资料&lt;a href=&quot;http://www.tutorialspoint.com/design_pattern/prototype_pattern.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tutorialspoint&lt;/a&gt;。这里主要是我的笔记，记录了我的理解与想法。&lt;/p&gt;
&lt;p&gt;设计模式主要追求的是重用性和拓展性。强行在这里扯运行效率就是耍流氓。&lt;/p&gt;
&lt;h3 id=&quot;Creational-Patterns&quot;&gt;&lt;a href=&quot;#Creational-Patterns&quot; class=&quot;headerlink&quot; title=&quot;Creational Patterns&quot;&gt;&lt;/a&gt;Creational Patterns&lt;/h3&gt;&lt;p&gt;主要有以下几种:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Factory Method&lt;/li&gt;
&lt;li&gt;Abstract Factory&lt;/li&gt;
&lt;li&gt;Singleton&lt;/li&gt;
&lt;li&gt;Builder&lt;/li&gt;
&lt;li&gt;Prototype&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Factory-Mehthod&quot;&gt;&lt;a href=&quot;#Factory-Mehthod&quot; class=&quot;headerlink&quot; title=&quot;Factory Mehthod&quot;&gt;&lt;/a&gt;Factory Mehthod&lt;/h4&gt;&lt;p&gt;工厂模式，提供创建Object的方法。可能会比较奇怪，创建的话直接用关键词&lt;code&gt;new&lt;/code&gt;不就可以了吗？&lt;/p&gt;
&lt;p&gt;该方法就是想将&lt;code&gt;new&lt;/code&gt;操作封装起来。例如有很多种&lt;code&gt;Shape&lt;/code&gt;，比如&lt;code&gt;Circle&lt;/code&gt;或者&lt;code&gt;Square&lt;/code&gt;。我们可以通过如下代码创建：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Shape shape1 = shapeFactory.getShape(&lt;span class=&quot;string&quot;&gt;&quot;CIRCLE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Shape shape3 = shapeFactory.getShape(&lt;span class=&quot;string&quot;&gt;&quot;SQUARE&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过工厂模式，首先我们获得的是&lt;code&gt;Shape&lt;/code&gt;接口，并不清楚关于&lt;code&gt;CIRCLE&lt;/code&gt;的真正Object是如何创建的。该Object可能是&lt;code&gt;CIRCLE&lt;/code&gt;,也可能是&lt;code&gt;MYCIRCLE&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;该模式的好处有两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;封装了创建Object的方法，有更强的安全性&lt;/li&gt;
&lt;li&gt;提高了代码的复用性。比如想将&lt;code&gt;CIRCLE&lt;/code&gt;改成&lt;code&gt;MYCIRCLE&lt;/code&gt;，只需要修改工厂，不需要在整个项目中全局修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/factory-method.jpg&quot; alt=&quot;factory-method.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Abstract-Factory&quot;&gt;&lt;a href=&quot;#Abstract-Factory&quot; class=&quot;headerlink&quot; title=&quot;Abstract Factory&quot;&gt;&lt;/a&gt;Abstract Factory&lt;/h4&gt;&lt;p&gt;如果工厂模式是用来创建Object，那么抽象工厂就是用来创建不同的工厂。层级上高了一层，但是感觉换汤不换药。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/abstract-factory.jpg&quot; alt=&quot;abstract-factory.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Builder&quot;&gt;&lt;a href=&quot;#Builder&quot; class=&quot;headerlink&quot; title=&quot;Builder&quot;&gt;&lt;/a&gt;Builder&lt;/h4&gt;&lt;p&gt;该方法用于一步一步创建复杂的Object。我觉得最经典的例子就是Android中创建对话框的示例代码。我们先创建一个Builder,随后添加一系列属性，最后创建这个Object。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AlertDialog.Builder builder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AlertDialog.Builder(getActivity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;builder.setMessage(&lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;).setTitle(&lt;span class=&quot;string&quot;&gt;&quot;Title&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Dialog dialog = builder.create();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Prototype&quot;&gt;&lt;a href=&quot;#Prototype&quot; class=&quot;headerlink&quot; title=&quot;Prototype&quot;&gt;&lt;/a&gt;Prototype&lt;/h4&gt;&lt;p&gt;核心思想就是创建缓存。当直接创建一个Object开销很大时，我们可以在工厂内存做一些缓存。用于快速创建Object。&lt;/p&gt;
&lt;p&gt;例如，当创建Object需要读取数据库数据时，我们可以将部分数据缓存起来，那么当下一次创建时就不需要繁重的数据库读取操作了。&lt;/p&gt;
&lt;p&gt;或者，我们可以缓存整个Object，后面通过&lt;code&gt;clone&lt;/code&gt;方法去创建新对象。&lt;/p&gt;
&lt;h3 id=&quot;Structural-Patterns&quot;&gt;&lt;a href=&quot;#Structural-Patterns&quot; class=&quot;headerlink&quot; title=&quot;Structural Patterns&quot;&gt;&lt;/a&gt;Structural Patterns&lt;/h3&gt;&lt;p&gt;主要有以下几种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adapter&lt;/li&gt;
&lt;li&gt;Bridge&lt;/li&gt;
&lt;li&gt;Composite&lt;/li&gt;
&lt;li&gt;Decorator&lt;/li&gt;
&lt;li&gt;Facade&lt;/li&gt;
&lt;li&gt;Flyweight&lt;/li&gt;
&lt;li&gt;Proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感觉这类Design Pattern主要解决的是在已有架构上如何优雅的添加新功能。既要有可拓展性，又不需要过分修改原代码。&lt;/p&gt;
&lt;h4 id=&quot;Adapter&quot;&gt;&lt;a href=&quot;#Adapter&quot; class=&quot;headerlink&quot; title=&quot;Adapter&quot;&gt;&lt;/a&gt;Adapter&lt;/h4&gt;&lt;p&gt;Adapter 主要用于弥补两个接口不兼容的问题。最早是在Android里遇到的&lt;code&gt;listview&lt;/code&gt;的&lt;code&gt;Adapter&lt;/code&gt;。通常&lt;code&gt;Adapter&lt;/code&gt;要实现一系列接口，随后其他主类具备&lt;code&gt;Adapter&lt;/code&gt;的实例，随后按照具体情况调用&lt;code&gt;Adapter&lt;/code&gt;的接口实现。&lt;/p&gt;
&lt;p&gt;感觉还是蛮抽象的，举个例子。当前有&lt;code&gt;AudioPlayer&lt;/code&gt;具有&lt;code&gt;play&lt;/code&gt;功能。如果想添加其他的&lt;code&gt;play&lt;/code&gt;功能，并且该功能已经被&lt;code&gt;VLCPlayer&lt;/code&gt;和&lt;code&gt;MP4Player&lt;/code&gt;实现。我们可以在&lt;code&gt;AudioPlayer&lt;/code&gt;和其他player之间加一个&lt;code&gt;Adapter&lt;/code&gt;。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/adapter.jpg&quot; alt=&quot;adapter.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Bridge&quot;&gt;&lt;a href=&quot;#Bridge&quot; class=&quot;headerlink&quot; title=&quot;Bridge&quot;&gt;&lt;/a&gt;Bridge&lt;/h4&gt;&lt;p&gt;个人感觉这是目前最难理解的设计模式。桥接模式把事物对象和其具体行为、具体特征分离开来，使它们可以各自独立的变化。如下图，我们现在有一套&lt;code&gt;Abstraction&lt;/code&gt;，也叫&lt;code&gt;具体对象&lt;/code&gt;。然后又有一系列&lt;code&gt;Implementor&lt;/code&gt;,也可以称之为&lt;code&gt;行为&lt;/code&gt;。通过桥接模式我们可以让对象更灵活得具备不同的行为。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/bridge-1.jpg&quot; alt=&quot;bridge-1.jpg&quot; title=&quot;&quot;&gt;
&lt;p&gt;下面是一个更具体的例子，我们可以让&lt;code&gt;Circle&lt;/code&gt;（事物）具备不同的&lt;code&gt;Color&lt;/code&gt;（行为）&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/bridge-2.jpg&quot; alt=&quot;bridge-2.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Composite&quot;&gt;&lt;a href=&quot;#Composite&quot; class=&quot;headerlink&quot; title=&quot;Composite&quot;&gt;&lt;/a&gt;Composite&lt;/h4&gt;&lt;p&gt;当我们对于一组Object相同对待时，可以用Composite设计模式。通常这些Object用树结构存储起来，并具备一定层级关系。&lt;/p&gt;
&lt;p&gt;简单讲，当我们有很多有关联的节点并且只有遍历操作时，可以将他们存成树结构（Composite模式）。&lt;/p&gt;
&lt;p&gt;感觉不常用。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/composite.jpg&quot; alt=&quot;composite.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Decorator&quot;&gt;&lt;a href=&quot;#Decorator&quot; class=&quot;headerlink&quot; title=&quot;Decorator&quot;&gt;&lt;/a&gt;Decorator&lt;/h4&gt;&lt;p&gt;当我们想基于原来基础添加新功能，同时不想破坏原有结构时，可以用Decorator模式。&lt;/p&gt;
&lt;p&gt;简单讲，就是在外面包一层，同时添加些新功能。要注意Decorator一定要继承原先的接口，保持接口一致。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/decorator.jpg&quot; alt=&quot;decorator.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Facade&quot;&gt;&lt;a href=&quot;#Facade&quot; class=&quot;headerlink&quot; title=&quot;Facade&quot;&gt;&lt;/a&gt;Facade&lt;/h4&gt;&lt;p&gt;隐藏框架的复杂细节，同时提供一些简单的接口。&lt;/p&gt;
&lt;h3 id=&quot;Flyweight&quot;&gt;&lt;a href=&quot;#Flyweight&quot; class=&quot;headerlink&quot; title=&quot;Flyweight&quot;&gt;&lt;/a&gt;Flyweight&lt;/h3&gt;&lt;p&gt;核心思路就是减少不必要的实例创建，减少内存占用率并提高性能。通常是用hashmap实现。&lt;/p&gt;
&lt;p&gt;感觉就是在获取一个实例时，检查是否有相同的，如果有直接返回，没有就创建。&lt;/p&gt;
&lt;p&gt;和Prototype的本质区别是&lt;code&gt;clone&lt;/code&gt;方法的有无。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/flyweight.jpg&quot; alt=&quot;flyweight.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Proxy&quot;&gt;&lt;a href=&quot;#Proxy&quot; class=&quot;headerlink&quot; title=&quot;Proxy&quot;&gt;&lt;/a&gt;Proxy&lt;/h3&gt;&lt;p&gt;一个类代表另一个类。同样是外包一层，但是这次不添加任何新功能，但要有原类的所有接口。感觉是最鸡肋的设计模式了。&lt;/p&gt;
&lt;p&gt;感觉和代理服务器一样，能解决特定问题（比如翻墙），但是对效率没有任何提高。&lt;/p&gt;
&lt;h3 id=&quot;Behavioral-Patterns&quot;&gt;&lt;a href=&quot;#Behavioral-Patterns&quot; class=&quot;headerlink&quot; title=&quot;Behavioral Patterns&quot;&gt;&lt;/a&gt;Behavioral Patterns&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Command&lt;/li&gt;
&lt;li&gt;Interpreter&lt;/li&gt;
&lt;li&gt;Iterator&lt;/li&gt;
&lt;li&gt;Mediator&lt;/li&gt;
&lt;li&gt;Observer&lt;/li&gt;
&lt;li&gt;State&lt;/li&gt;
&lt;li&gt;Strategy&lt;/li&gt;
&lt;li&gt;Chain of Responsibility&lt;/li&gt;
&lt;li&gt;Visitor&lt;/li&gt;
&lt;li&gt;Template Method&lt;/li&gt;
&lt;li&gt;Memento&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Command&quot;&gt;&lt;a href=&quot;#Command&quot; class=&quot;headerlink&quot; title=&quot;Command&quot;&gt;&lt;/a&gt;Command&lt;/h4&gt;&lt;p&gt;要有以下几个元素：实体，指令，执行者。指令由执行者实施，并作用于实体。下面的例子就是由&lt;code&gt;Broker&lt;/code&gt;执行买卖&lt;code&gt;Stock&lt;/code&gt;的操作。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/command.jpg&quot; alt=&quot;command.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Interpreter&quot;&gt;&lt;a href=&quot;#Interpreter&quot; class=&quot;headerlink&quot; title=&quot;Interpreter&quot;&gt;&lt;/a&gt;Interpreter&lt;/h4&gt;&lt;p&gt;主要用来解释文本，去衡量特定情况是否发生。该模式可以用在SQL语言解析等。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/interpreter.jpg&quot; alt=&quot;interpreter.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Mediator&quot;&gt;&lt;a href=&quot;#Mediator&quot; class=&quot;headerlink&quot; title=&quot;Mediator&quot;&gt;&lt;/a&gt;Mediator&lt;/h4&gt;&lt;p&gt;Mediator通常用于简化多个物体之间的信号传递。通常多个物体会共享一个类似EventBus的类，使用EventBus的静态方法共享信息。&lt;/p&gt;
&lt;p&gt;下面是一个聊天室的例子。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/mediator.jpg&quot; alt=&quot;mediator.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;State&quot;&gt;&lt;a href=&quot;#State&quot; class=&quot;headerlink&quot; title=&quot;State&quot;&gt;&lt;/a&gt;State&lt;/h4&gt;&lt;p&gt;在State模式中类的行为基于&lt;code&gt;状态&lt;/code&gt;而变化。简单说就是实体具备几个互斥的状态。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/state.jpg&quot; alt=&quot;state.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Strategy&quot;&gt;&lt;a href=&quot;#Strategy&quot; class=&quot;headerlink&quot; title=&quot;Strategy&quot;&gt;&lt;/a&gt;Strategy&lt;/h4&gt;&lt;p&gt;在策略模式中，类行为或者算法可以在运行时动态更改。核心在于&lt;code&gt;动态更改&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Strategy&lt;/code&gt; 和 &lt;code&gt;Interpreter&lt;/code&gt; 有相似的地方，因为&lt;code&gt;解释&lt;/code&gt;也算作一种&lt;code&gt;策略&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下面的例子中，我们可以动态修改计算策略（加或减）。&lt;br&gt;&lt;img src=&quot;/2016/03/31/design-pattern/strategy.jpg&quot; alt=&quot;strategy.jpg&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;Chain-of-Responsibility&quot;&gt;&lt;a href=&quot;#Chain-of-Responsibility&quot; class=&quot;headerlink&quot; title=&quot;Chain of Responsibility&quot;&gt;&lt;/a&gt;Chain of Responsibility&lt;/h4&gt;&lt;p&gt;该设计模式讲究&lt;code&gt;分工&lt;/code&gt;原则。对于一个请求，创建一个链式的处理器，当一个处理器无法处理请求时，将该请求转发给另一个处理器。值得注意的是，这个链式处理器有层次关系，通常按照一定顺序链接起来。&lt;/p&gt;
&lt;p&gt;下面例子是一个Logger,根据等级又可分为&lt;code&gt;INFO&lt;/code&gt;,&lt;code&gt;DEBUG&lt;/code&gt;,&lt;code&gt;ERROR&lt;/code&gt;来输出。类似&lt;code&gt;Logcat&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;/2016/03/31/design-pattern/chain.jpg&quot; alt=&quot;chain.jpg&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;Visitor&quot;&gt;&lt;a href=&quot;#Visitor&quot; class=&quot;headerlink&quot; title=&quot;Visitor&quot;&gt;&lt;/a&gt;Visitor&lt;/h4&gt;&lt;p&gt;访问者模式有以下两个功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以将Object与算法分离&lt;/li&gt;
&lt;li&gt;通过这种模式我们可以添加新功能但不需要修改原有结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个模式其实比较诡异，建议直接看这个&lt;a href=&quot;http://www.tutorialspoint.com/design_pattern/visitor_pattern.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在链接的例子中，我们可以添加其他&lt;code&gt;ComputerPart&lt;/code&gt;，同时不需要修改原内容。&lt;/p&gt;
&lt;h4 id=&quot;Template&quot;&gt;&lt;a href=&quot;#Template&quot; class=&quot;headerlink&quot; title=&quot;Template&quot;&gt;&lt;/a&gt;Template&lt;/h4&gt;&lt;p&gt;有一个模板类具备一些抽象方法，而子类需要重写该方法以实现自己的功能。通常模板类要有一个非抽象的方法调用子类实现的具体方法。具体可以看下面的例子。&lt;/p&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/template-1.jpg&quot; alt=&quot;template-1.jpg&quot; title=&quot;&quot;&gt;
&lt;img src=&quot;/2016/03/31/design-pattern/template-2.jpg&quot; alt=&quot;template-2.jpg&quot; title=&quot;&quot;&gt;
&lt;h4 id=&quot;Memento&quot;&gt;&lt;a href=&quot;#Memento&quot; class=&quot;headerlink&quot; title=&quot;Memento&quot;&gt;&lt;/a&gt;Memento&lt;/h4&gt;&lt;p&gt;该模式可以将Object回滚到之前的状态。感觉没什么意思。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍了GOF系列的设计模式&lt;br&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="design pattern" scheme="http://yoursite.com/tags/design-pattern/"/>
    
  </entry>
  
  <entry>
    <title>MYSQL 数据库教程</title>
    <link href="http://yoursite.com/2016/03/09/mysql-tutorial/"/>
    <id>http://yoursite.com/2016/03/09/mysql-tutorial/</id>
    <published>2016-03-09T20:05:07.000Z</published>
    <updated>2016-04-01T04:34:33.000Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍MYSQL数据库的基本知识和库函数指令。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;基本知识介绍&quot;&gt;&lt;a href=&quot;#基本知识介绍&quot; class=&quot;headerlink&quot; title=&quot;基本知识介绍&quot;&gt;&lt;/a&gt;基本知识介绍&lt;/h2&gt;&lt;h2 id=&quot;搭建MYSQL数据库&quot;&gt;&lt;a href=&quot;#搭建MYSQL数据库&quot; class=&quot;headerlink&quot; title=&quot;搭建MYSQL数据库&quot;&gt;&lt;/a&gt;搭建MYSQL数据库&lt;/h2&gt;&lt;h3 id=&quot;安装MYSQL数据库&quot;&gt;&lt;a href=&quot;#安装MYSQL数据库&quot; class=&quot;headerlink&quot; title=&quot;安装MYSQL数据库&quot;&gt;&lt;/a&gt;安装MYSQL数据库&lt;/h3&gt;&lt;p&gt;在ubuntu安装mysql十分简单，只要执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这期间，会让你设置&lt;code&gt;root&lt;/code&gt;用户的密码&lt;/p&gt;
&lt;h3 id=&quot;MYSQL-常用指令&quot;&gt;&lt;a href=&quot;#MYSQL-常用指令&quot; class=&quot;headerlink&quot; title=&quot;MYSQL 常用指令&quot;&gt;&lt;/a&gt;MYSQL 常用指令&lt;/h3&gt;&lt;h4 id=&quot;重启MYSQL&quot;&gt;&lt;a href=&quot;#重启MYSQL&quot; class=&quot;headerlink&quot; title=&quot;重启MYSQL&quot;&gt;&lt;/a&gt;重启MYSQL&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo service mysql restart&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;进入MYSQL-SHELL&quot;&gt;&lt;a href=&quot;#进入MYSQL-SHELL&quot; class=&quot;headerlink&quot; title=&quot;进入MYSQL SHELL&quot;&gt;&lt;/a&gt;进入MYSQL SHELL&lt;/h4&gt;&lt;p&gt;以&lt;code&gt;root&lt;/code&gt;身份登陆，密码为&lt;code&gt;root&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -u root -p root&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;将数据导入MYSQL&quot;&gt;&lt;a href=&quot;#将数据导入MYSQL&quot; class=&quot;headerlink&quot; title=&quot;将数据导入MYSQL&quot;&gt;&lt;/a&gt;将数据导入MYSQL&lt;/h4&gt;&lt;h5 id=&quot;mysqlimport用法&quot;&gt;&lt;a href=&quot;#mysqlimport用法&quot; class=&quot;headerlink&quot; title=&quot;mysqlimport用法&quot;&gt;&lt;/a&gt;mysqlimport用法&lt;/h5&gt;&lt;p&gt;使用&lt;code&gt;mysqlimport&lt;/code&gt;指令可将数据从&lt;code&gt;csv&lt;/code&gt;导入数据库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysqlimport --fields-terminated-by=, --local -u root -pdb15319root song_db songs.csv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;songs.csv&lt;/code&gt;中的数据导入数据库&lt;code&gt;song_db&lt;/code&gt;,表名为&lt;code&gt;songs&lt;/code&gt;。在&lt;code&gt;songs.csv&lt;/code&gt;中分隔符为&lt;code&gt;,&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;load-infile用法&quot;&gt;&lt;a href=&quot;#load-infile用法&quot; class=&quot;headerlink&quot; title=&quot;load infile用法&quot;&gt;&lt;/a&gt;load infile用法&lt;/h5&gt;&lt;p&gt;也可以在&lt;code&gt;mysql shell&lt;/code&gt;中执行指令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; LOAD DATA LOCAL INFILE &lt;span class=&quot;string&quot;&gt;&#39;twitter.txt&#39;&lt;/span&gt; INTO TABLE twitter CHARACTER SET utf8mb4 FIELDS TERMINATED BY &lt;span class=&quot;string&quot;&gt;&#39;\t&#39;&lt;/span&gt; LINES TERMINATED BY &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;MYSQL-SHELL-常用指令&quot;&gt;&lt;a href=&quot;#MYSQL-SHELL-常用指令&quot; class=&quot;headerlink&quot; title=&quot;MYSQL SHELL 常用指令&quot;&gt;&lt;/a&gt;MYSQL SHELL 常用指令&lt;/h3&gt;&lt;p&gt;这里指进入mysql shell之后可以输入的指令，下面是一些实例&lt;/p&gt;
&lt;h4 id=&quot;常用指令合集1&quot;&gt;&lt;a href=&quot;#常用指令合集1&quot; class=&quot;headerlink&quot; title=&quot;常用指令合集1&quot;&gt;&lt;/a&gt;常用指令合集1&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show databases;          &lt;span class=&quot;comment&quot;&gt;#显示数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show tables;             &lt;span class=&quot;comment&quot;&gt;#显示数据表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; describe students;       &lt;span class=&quot;comment&quot;&gt;#显示数据表students的详细信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create database demo;    &lt;span class=&quot;comment&quot;&gt;#创建数据库demo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create user &lt;span class=&quot;string&quot;&gt;&#39;demouser&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt; identified by &lt;span class=&quot;string&quot;&gt;&#39;demopassword&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;#创建用户demouser本地用户，密码为demopassword&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant all privileges on demo.* to &lt;span class=&quot;string&quot;&gt;&#39;demouser&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#给demouser赋予针对demo的所有权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show processlist;        &lt;span class=&quot;comment&quot;&gt;#查看当前的连接数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Cloud-Computing-作业流程&quot;&gt;&lt;a href=&quot;#Cloud-Computing-作业流程&quot; class=&quot;headerlink&quot; title=&quot;Cloud Computing 作业流程&quot;&gt;&lt;/a&gt;Cloud Computing 作业流程&lt;/h2&gt;&lt;h3 id=&quot;在ubuntu上安装mysql-5-7&quot;&gt;&lt;a href=&quot;#在ubuntu上安装mysql-5-7&quot; class=&quot;headerlink&quot; title=&quot;在ubuntu上安装mysql 5.7&quot;&gt;&lt;/a&gt;在ubuntu上安装mysql 5.7&lt;/h3&gt;&lt;p&gt;目前apt-get上的mysql版本是5.5，如果想安装5.7需要按照以下步骤进行修改&lt;/p&gt;
&lt;p&gt;首先上&lt;a href=&quot;http://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;oracle官网&lt;/a&gt;下载&lt;code&gt;deb&lt;/code&gt;文件。随后执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo dpkg -i mysql-apt-config_w.x.y-z_all.deb  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在中间会跳入一个选择界面，请选择mysql5.7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;对mysql进行必要修改&quot;&gt;&lt;a href=&quot;#对mysql进行必要修改&quot; class=&quot;headerlink&quot; title=&quot;对mysql进行必要修改&quot;&gt;&lt;/a&gt;对mysql进行必要修改&lt;/h3&gt;&lt;h4 id=&quot;修改外网访问权限&quot;&gt;&lt;a href=&quot;#修改外网访问权限&quot; class=&quot;headerlink&quot; title=&quot;修改外网访问权限&quot;&gt;&lt;/a&gt;修改外网访问权限&lt;/h4&gt;&lt;p&gt;我们需要开放3306端口，让&lt;code&gt;front-end&lt;/code&gt;可以通过JDBC连接数据库。&lt;/p&gt;
&lt;p&gt;首先要修改&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;,将下面一行&lt;code&gt;bind-address&lt;/code&gt;注释掉&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Instead of skip-networking the default is now to listen only on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# localhost which is more compatible and is not less secure.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# bind-address  = 127.0.0.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;随后，在mysql的shell中执行下列指令赋予访问权限&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; grant all on database_name.* to user_name@&lt;span class=&quot;string&quot;&gt;&#39;%&#39;&lt;/span&gt; identified by &lt;span class=&quot;string&quot;&gt;&#39;user_password&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;修改database编码格式&quot;&gt;&lt;a href=&quot;#修改database编码格式&quot; class=&quot;headerlink&quot; title=&quot;修改database编码格式&quot;&gt;&lt;/a&gt;修改database编码格式&lt;/h4&gt;&lt;p&gt;修改&lt;code&gt;/etc/mysql/my.cnf&lt;/code&gt;,在&lt;code&gt;[mysqld]&lt;/code&gt;下添加：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;collation-server = utf8_unicode_ci&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;init-connect=&lt;span class=&quot;string&quot;&gt;&#39;SET NAMES utf8&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;character-set-server = utf8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;进行mysql更新&quot;&gt;&lt;a href=&quot;#进行mysql更新&quot; class=&quot;headerlink&quot; title=&quot;进行mysql更新&quot;&gt;&lt;/a&gt;进行mysql更新&lt;/h4&gt;&lt;p&gt;有时会遇到&lt;code&gt;Table &amp;#39;performance_schema.session_variables&amp;#39; doesn&amp;#39;t exist&lt;/code&gt;的情况，就需要执行下列代码进行更新：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql_upgrade -u root -p --force&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;建表&quot;&gt;&lt;a href=&quot;#建表&quot; class=&quot;headerlink&quot; title=&quot;建表&quot;&gt;&lt;/a&gt;建表&lt;/h3&gt;&lt;p&gt;编写下面的脚本，保存为&lt;code&gt;create_tables.sql&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DROP TABLE IF EXISTS `twitter`;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE `twitter` (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	`userid_hashtag` varchar(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) binary NOT NULL, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	`content` TEXT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  INDEX search_key(userid_hashtag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) ENGINE=MyISAM DEFAULT CHARACTER SET=utf8mb4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LOAD DATA LOCAL INFILE &lt;span class=&quot;string&quot;&gt;&#39;twitter.txt&#39;&lt;/span&gt; INTO TABLE twitter CHARACTER SET utf8mb4 FIELDS TERMINATED BY &lt;span class=&quot;string&quot;&gt;&#39;\t&#39;&lt;/span&gt; LINES TERMINATED BY &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在命令行执行：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -u root -proot twitter &amp;lt; create_tables.sql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍MYSQL数据库的基本知识和库函数指令。&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下添加开机自动脚本</title>
    <link href="http://yoursite.com/2016/03/06/linux-auto-script/"/>
    <id>http://yoursite.com/2016/03/06/linux-auto-script/</id>
    <published>2016-03-06T22:50:06.000Z</published>
    <updated>2016-03-13T03:41:20.000Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍如何在Ubuntu下添加开机自动脚本。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;编辑rc-local脚本&quot;&gt;&lt;a href=&quot;#编辑rc-local脚本&quot; class=&quot;headerlink&quot; title=&quot;编辑rc.local脚本&quot;&gt;&lt;/a&gt;编辑&lt;code&gt;rc.local&lt;/code&gt;脚本&lt;/h2&gt;&lt;p&gt;&lt;code&gt;rc.local&lt;/code&gt;脚本是一个ubuntu开机后会自动执行的脚本，我们可以在该脚本内添加命令行指令。&lt;/p&gt;
&lt;p&gt;该脚本位于&lt;code&gt;/etc/&lt;/code&gt;路径下，需要&lt;code&gt;root&lt;/code&gt;权限才能修改。该脚本具体格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/bin/sh -e&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rc.local&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This script is executed at the end of each multiuser runlevel.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Make sure that the script will &quot;exit 0&quot; on success or any other&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# value on error.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# In order to enable or disable this script just change the execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# bits.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# By default this script does nothing.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意: 一定要将命令添加在 &lt;code&gt;exit 0&lt;/code&gt;之前&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;添加一个开机启动脚本&quot;&gt;&lt;a href=&quot;#添加一个开机启动脚本&quot; class=&quot;headerlink&quot; title=&quot;添加一个开机启动脚本&quot;&gt;&lt;/a&gt;添加一个开机启动脚本&lt;/h2&gt;&lt;p&gt;上面的方法虽然奏效，但是将所有不同的脚本指令写入同一个文件不是一个好的&lt;code&gt;style&lt;/code&gt;。我们可以自己写一个&lt;code&gt;run.sh&lt;/code&gt;,然后让系统在开机时自动执行。&lt;/p&gt;
&lt;p&gt;以下是基本步骤&lt;/p&gt;
&lt;h3 id=&quot;1-建立自己的脚本&quot;&gt;&lt;a href=&quot;#1-建立自己的脚本&quot; class=&quot;headerlink&quot; title=&quot;1. 建立自己的脚本&quot;&gt;&lt;/a&gt;1. 建立自己的脚本&lt;/h3&gt;&lt;p&gt;首先我们需要写一个需要执行的脚本。在这里我们已一个开启服务器的脚本为例：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;shebang&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /home/ubuntu/undertow-server/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mvn &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt;:java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;随后将脚本保存为&lt;code&gt;run_server.sh&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-修改脚本权限&quot;&gt;&lt;a href=&quot;#2-修改脚本权限&quot; class=&quot;headerlink&quot; title=&quot;2. 修改脚本权限&quot;&gt;&lt;/a&gt;2. 修改脚本权限&lt;/h3&gt;&lt;p&gt;一定要让脚本具备可执行权限，可以执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo chmod 755 run_server.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-将脚本放置在启动路径下&quot;&gt;&lt;a href=&quot;#3-将脚本放置在启动路径下&quot; class=&quot;headerlink&quot; title=&quot;3. 将脚本放置在启动路径下&quot;&gt;&lt;/a&gt;3. 将脚本放置在启动路径下&lt;/h3&gt;&lt;p&gt;将&lt;code&gt;run_server.sh&lt;/code&gt;移动到&lt;code&gt;/etc/init.d&lt;/code&gt;路径下，可以直接拷贝，也可以链接过去&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo cp run_server.sh /etc/init.d/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-将脚本添加到启动脚本。&quot;&gt;&lt;a href=&quot;#4-将脚本添加到启动脚本。&quot; class=&quot;headerlink&quot; title=&quot;4. 将脚本添加到启动脚本。&quot;&gt;&lt;/a&gt;4. 将脚本添加到启动脚本。&lt;/h3&gt;&lt;p&gt;执行如下指令，在这里&lt;code&gt;90&lt;/code&gt;表明一个优先级，越高表示执行的越晚&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /etc/init.d/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo update-rc.d run_server defaults &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;如何移除该脚本&quot;&gt;&lt;a href=&quot;#如何移除该脚本&quot; class=&quot;headerlink&quot; title=&quot;如何移除该脚本&quot;&gt;&lt;/a&gt;如何移除该脚本&lt;/h3&gt;&lt;p&gt;很简单，执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo update-rc.d &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt; run_server.sh remove&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍如何在Ubuntu下添加开机自动脚本。&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>midterm-18653</title>
    <link href="http://yoursite.com/2016/02/28/midterm-18653/"/>
    <id>http://yoursite.com/2016/02/28/midterm-18653/</id>
    <published>2016-02-29T04:25:28.000Z</published>
    <updated>2016-03-03T03:55:02.000Z</updated>
    
    <content type="html">&lt;p&gt;有关18653-Software Architecture and Design的期中考试复习&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Basic-questions&quot;&gt;&lt;a href=&quot;#Basic-questions&quot; class=&quot;headerlink&quot; title=&quot;Basic questions&quot;&gt;&lt;/a&gt;Basic questions&lt;!-- more --&gt;&lt;/h2&gt;&lt;h3 id=&quot;What-is-Software-Architecture&quot;&gt;&lt;a href=&quot;#What-is-Software-Architecture&quot; class=&quot;headerlink&quot; title=&quot;What is Software Architecture&quot;&gt;&lt;/a&gt;What is Software Architecture&lt;/h3&gt;&lt;p&gt;Software architecture is a level of design that involves&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the description of elements from which systems are bulit&lt;/li&gt;
&lt;li&gt;interactions among those elements&lt;/li&gt;
&lt;li&gt;patterns that guide their composition&lt;/li&gt;
&lt;li&gt;constraints on these patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Why-software-architecture-is-important&quot;&gt;&lt;a href=&quot;#Why-software-architecture-is-important&quot; class=&quot;headerlink&quot; title=&quot;Why software architecture is important&quot;&gt;&lt;/a&gt;Why software architecture is important&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;It has been proved useful for families of system.&lt;/li&gt;
&lt;li&gt;It can make the complex system flexible and well organized&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Various-view-points&quot;&gt;&lt;a href=&quot;#Various-view-points&quot; class=&quot;headerlink&quot; title=&quot;Various view points&quot;&gt;&lt;/a&gt;Various view points&lt;/h3&gt;&lt;h4 id=&quot;4-1-Views&quot;&gt;&lt;a href=&quot;#4-1-Views&quot; class=&quot;headerlink&quot; title=&quot;4+1 Views&quot;&gt;&lt;/a&gt;4+1 Views&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;角度1&lt;/strong&gt;：从作业2的要求中获取的名词与解析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Function View: Show the component diagram, including interfaces and dependencies.&lt;/li&gt;
&lt;li&gt;Information View: Show the schema, data models and data flows.&lt;/li&gt;
&lt;li&gt;Deployment View: Where to deploy the software components&lt;/li&gt;
&lt;li&gt;Development View: main software packages&lt;/li&gt;
&lt;li&gt;Concurrency View: How do we ensure data consistency in the distributed system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;角度2&lt;/strong&gt;：从课件中获取的名词与解析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logical View： 让普通用户能看懂的示例图，介绍整个系统的主要模块与简单交互。包含了简单地类图，时序图等&lt;/li&gt;
&lt;li&gt;Development View: 从程序员的角度较宏观得介绍整个系统的组成。包含了包图，类图&lt;/li&gt;
&lt;li&gt;Process View: 介绍了系统事件处理的流程，介绍整个系统是如何运行的，今儿验证系统的性能。&lt;/li&gt;
&lt;li&gt;Physical View: 从系统工程师的角度介绍，从物理仪器角度介绍系统的架构。mapping the software to hardware&lt;/li&gt;
&lt;li&gt;Scenarios: Putting it all together and use them to show the important scenarios&lt;h3 id=&quot;What-does-it-mean-by-architecture-through-software-lifecycle&quot;&gt;&lt;a href=&quot;#What-does-it-mean-by-architecture-through-software-lifecycle&quot; class=&quot;headerlink&quot; title=&quot;What does it mean by architecture through software lifecycle?&quot;&gt;&lt;/a&gt;What does it mean by architecture through software lifecycle?&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;Requirements&lt;/li&gt;
&lt;li&gt;Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Analysis and Testing&lt;/li&gt;
&lt;li&gt;Evolution&lt;/li&gt;
&lt;li&gt;Development Process&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Will-architecture-design-allow-creativity&quot;&gt;&lt;a href=&quot;#Will-architecture-design-allow-creativity&quot; class=&quot;headerlink&quot; title=&quot;Will architecture design allow creativity?&quot;&gt;&lt;/a&gt;Will architecture design allow creativity?&lt;/h3&gt;&lt;p&gt;Yes&lt;/p&gt;
&lt;h3 id=&quot;Stakeholders&quot;&gt;&lt;a href=&quot;#Stakeholders&quot; class=&quot;headerlink&quot; title=&quot;Stakeholders&quot;&gt;&lt;/a&gt;Stakeholders&lt;/h3&gt;&lt;p&gt;Architects, Developers, Testers, Managers, Customers, Users, Vendors&lt;/p&gt;
&lt;h2 id=&quot;Basic-elements&quot;&gt;&lt;a href=&quot;#Basic-elements&quot; class=&quot;headerlink&quot; title=&quot;Basic elements&quot;&gt;&lt;/a&gt;Basic elements&lt;/h2&gt;&lt;h3 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h3&gt;&lt;h4 id=&quot;Defination&quot;&gt;&lt;a href=&quot;#Defination&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A software component is an architectural entity that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;encapsulates a subset of the system’s functionality and data&lt;/li&gt;
&lt;li&gt;restricts access to that subset&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Connector&quot;&gt;&lt;a href=&quot;#Connector&quot; class=&quot;headerlink&quot; title=&quot;Connector&quot;&gt;&lt;/a&gt;Connector&lt;/h3&gt;&lt;h4 id=&quot;Defination-1&quot;&gt;&lt;a href=&quot;#Defination-1&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A &lt;strong&gt;software connector&lt;/strong&gt; is an architectural building block tasked with effecting and regulating interactions among components&lt;/p&gt;
&lt;h4 id=&quot;Taxonomy&quot;&gt;&lt;a href=&quot;#Taxonomy&quot; class=&quot;headerlink&quot; title=&quot;Taxonomy&quot;&gt;&lt;/a&gt;Taxonomy&lt;/h4&gt;&lt;h5 id=&quot;4-main-roles&quot;&gt;&lt;a href=&quot;#4-main-roles&quot; class=&quot;headerlink&quot; title=&quot;4 main roles&quot;&gt;&lt;/a&gt;4 main roles&lt;/h5&gt;&lt;p&gt;Communication, Conversion, Facilitation, Coordination&lt;/p&gt;
&lt;h5 id=&quot;8-main-types&quot;&gt;&lt;a href=&quot;#8-main-types&quot; class=&quot;headerlink&quot; title=&quot;8 main types&quot;&gt;&lt;/a&gt;8 main types&lt;/h5&gt;&lt;p&gt;Event, Stream, Procedure Call, Arbitrator, Data Access, Distributor, Linkage, Adaptor&lt;/p&gt;
&lt;h4 id=&quot;Benefits-of-first-class-connectors&quot;&gt;&lt;a href=&quot;#Benefits-of-first-class-connectors&quot; class=&quot;headerlink&quot; title=&quot;Benefits of first-class connectors&quot;&gt;&lt;/a&gt;Benefits of first-class connectors&lt;/h4&gt;&lt;p&gt;Software evolution, separation of concerns, modularity, pluggability&lt;/p&gt;
&lt;h3 id=&quot;Configuration&quot;&gt;&lt;a href=&quot;#Configuration&quot; class=&quot;headerlink&quot; title=&quot;Configuration&quot;&gt;&lt;/a&gt;Configuration&lt;/h3&gt;&lt;p&gt;An architectural configuration, or topology, is a set of specific associations between the components and connectors of a software system’s architecture&lt;/p&gt;
&lt;h3 id=&quot;Rationale&quot;&gt;&lt;a href=&quot;#Rationale&quot; class=&quot;headerlink&quot; title=&quot;Rationale&quot;&gt;&lt;/a&gt;Rationale&lt;/h3&gt;&lt;p&gt;Rationale is the information that explains why particular architectural decisions were made, and what purpose various elements serve&lt;/p&gt;
&lt;h2 id=&quot;Architectural-sytles-and-patterns&quot;&gt;&lt;a href=&quot;#Architectural-sytles-and-patterns&quot; class=&quot;headerlink&quot; title=&quot;Architectural sytles and patterns&quot;&gt;&lt;/a&gt;Architectural sytles and patterns&lt;/h2&gt;&lt;h3 id=&quot;Architectural-sytles&quot;&gt;&lt;a href=&quot;#Architectural-sytles&quot; class=&quot;headerlink&quot; title=&quot;Architectural sytles&quot;&gt;&lt;/a&gt;Architectural sytles&lt;/h3&gt;&lt;h4 id=&quot;Defination-2&quot;&gt;&lt;a href=&quot;#Defination-2&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A set of architectural desgin decisions that&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;are applicable in a given deveopment context&lt;/li&gt;
&lt;li&gt;constrain architectural design decisions that specific to a particular system within that context&lt;/li&gt;
&lt;li&gt;elicit beneficial qualities in each resulting system&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h4&gt;&lt;p&gt;详见另一篇文章。&lt;/p&gt;
&lt;h3 id=&quot;Architectural-patterns&quot;&gt;&lt;a href=&quot;#Architectural-patterns&quot; class=&quot;headerlink&quot; title=&quot;Architectural patterns&quot;&gt;&lt;/a&gt;Architectural patterns&lt;/h3&gt;&lt;h4 id=&quot;Defination-3&quot;&gt;&lt;a href=&quot;#Defination-3&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h4&gt;&lt;p&gt;A set of architectural design decisions that are applicable to a recurring design problem, and parameterized to account for different software development contexts in which that problem appears.&lt;/p&gt;
&lt;h3 id=&quot;Example-1&quot;&gt;&lt;a href=&quot;#Example-1&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;&lt;p&gt;3-tier (Stage-Logic-Display), MVC, Sense Compute Control&lt;/p&gt;
&lt;h3 id=&quot;Comparisons-of-style-and-pattern&quot;&gt;&lt;a href=&quot;#Comparisons-of-style-and-pattern&quot; class=&quot;headerlink&quot; title=&quot;Comparisons of style and pattern&quot;&gt;&lt;/a&gt;Comparisons of style and pattern&lt;/h3&gt;&lt;p&gt;Compared to styles, architectural patterns are at a &lt;strong&gt;coarser level of granularity&lt;/strong&gt; (design decisions versus actual architectural elements) and are inherently more &lt;strong&gt;domain specific&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Methods-of-evaluating-design-methods-like-styles-and-patterns&quot;&gt;&lt;a href=&quot;#Methods-of-evaluating-design-methods-like-styles-and-patterns&quot; class=&quot;headerlink&quot; title=&quot;Methods of evaluating design methods like styles and patterns&quot;&gt;&lt;/a&gt;Methods of evaluating design methods like styles and patterns&lt;/h3&gt;&lt;p&gt;Vocabulary, structural patterns, computational model, invariants, common examples, disadvantages, specializations&lt;/p&gt;
&lt;h3 id=&quot;Methods-of-design&quot;&gt;&lt;a href=&quot;#Methods-of-design&quot; class=&quot;headerlink&quot; title=&quot;Methods of design&quot;&gt;&lt;/a&gt;Methods of design&lt;/h3&gt;&lt;h4 id=&quot;Greenfield-design&quot;&gt;&lt;a href=&quot;#Greenfield-design&quot; class=&quot;headerlink&quot; title=&quot;Greenfield design&quot;&gt;&lt;/a&gt;Greenfield design&lt;/h4&gt;&lt;p&gt;这里指的是大家对一个领域都没有经验，就需要用一系列方法不断学习或者试错找出最优解，常用的方法有：&lt;br&gt;Analogy searching, Brainstorming, Literature searching, Morphological Charts, Removing Mental Blocks, Insight from requirements/implementation&lt;/p&gt;
&lt;h2 id=&quot;Architectural-Modeling&quot;&gt;&lt;a href=&quot;#Architectural-Modeling&quot; class=&quot;headerlink&quot; title=&quot;Architectural Modeling&quot;&gt;&lt;/a&gt;Architectural Modeling&lt;/h2&gt;&lt;h3 id=&quot;Defination-4&quot;&gt;&lt;a href=&quot;#Defination-4&quot; class=&quot;headerlink&quot; title=&quot;Defination&quot;&gt;&lt;/a&gt;Defination&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;An architectural model is an artifact that captures some or all of the design decisions that comprise a system’s architecture&lt;/li&gt;
&lt;li&gt;Architectural modeling is the reification and documentation of those design decisions&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;How-to-choose-what-to-model&quot;&gt;&lt;a href=&quot;#How-to-choose-what-to-model&quot; class=&quot;headerlink&quot; title=&quot;How to choose what to model?&quot;&gt;&lt;/a&gt;How to choose what to model?&lt;/h3&gt;&lt;p&gt;Cost/Benefit Decision&lt;/p&gt;
&lt;h3 id=&quot;What-do-we-model&quot;&gt;&lt;a href=&quot;#What-do-we-model&quot; class=&quot;headerlink&quot; title=&quot;What do we model?&quot;&gt;&lt;/a&gt;What do we model?&lt;/h3&gt;&lt;p&gt;Structure (Architectural element), static/dynamic behaviors, functional/non-functional aspects, Views/Viewpoints&lt;/p&gt;
&lt;h3 id=&quot;Important-things-to-“get-right”&quot;&gt;&lt;a href=&quot;#Important-things-to-“get-right”&quot; class=&quot;headerlink&quot; title=&quot;Important things to “get right”&quot;&gt;&lt;/a&gt;Important things to “get right”&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Ambiguity: A model is ambiguous if it is open to more than one interpretation&lt;/li&gt;
&lt;li&gt;Accuracy: A model is accurate if it is correct, conforms to fact, or deviates from correctness within acceptable limits.&lt;/li&gt;
&lt;li&gt;Precision: A model is precise if it is specific, detailed and exact.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;How-do-we-evaluate-modeling-techniques&quot;&gt;&lt;a href=&quot;#How-do-we-evaluate-modeling-techniques&quot; class=&quot;headerlink&quot; title=&quot;How do we evaluate modeling techniques?&quot;&gt;&lt;/a&gt;How do we evaluate modeling techniques?&lt;/h3&gt;&lt;p&gt;Scope/Purpose, Basic Elements, Style, Static/Dynamic Aspects, Dynamic Modeling&lt;/p&gt;
&lt;h2 id=&quot;Service-Oriented-Architecture&quot;&gt;&lt;a href=&quot;#Service-Oriented-Architecture&quot; class=&quot;headerlink&quot; title=&quot;Service Oriented Architecture&quot;&gt;&lt;/a&gt;Service Oriented Architecture&lt;/h2&gt;&lt;h3 id=&quot;Concept-of-SOA&quot;&gt;&lt;a href=&quot;#Concept-of-SOA&quot; class=&quot;headerlink&quot; title=&quot;Concept of SOA&quot;&gt;&lt;/a&gt;Concept of SOA&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SOA&lt;/strong&gt; is a business IT aligned approach in which applications rely on available services to facilitate business processes. It guides the establishment of a loosely coupled system with flexibility and extensibility.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Services Computing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bridges the gap between business and IT&lt;/li&gt;
&lt;li&gt;promises to benefit business&lt;/li&gt;
&lt;li&gt;enable reusable, scalable software as services on the internet&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;SOA-on-a-Bilateral-View&quot;&gt;&lt;a href=&quot;#SOA-on-a-Bilateral-View&quot; class=&quot;headerlink&quot; title=&quot;SOA on a Bilateral View&quot;&gt;&lt;/a&gt;SOA on a Bilateral View&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Top-Down Approach&lt;/strong&gt;: decompose business components into business process each been realized by IT process&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bottom-Up Approach&lt;/strong&gt;: provides SOA based IT resources, which can be seamlessly integrated to rapidly. Create new business processes that lead to new business opportunities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Enterprise-Service-Bus-ESB&quot;&gt;&lt;a href=&quot;#Enterprise-Service-Bus-ESB&quot; class=&quot;headerlink&quot; title=&quot;Enterprise Service Bus(ESB)&quot;&gt;&lt;/a&gt;Enterprise Service Bus(ESB)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ESB&lt;/strong&gt; is a conceptual software infrastructure that facilitates dynamic integration, message routing and their interactions, which paves a new systematic way of constructing and deploying enterprise services.&lt;/p&gt;
&lt;h3 id=&quot;SOA-RA&quot;&gt;&lt;a href=&quot;#SOA-RA&quot; class=&quot;headerlink&quot; title=&quot;SOA-RA&quot;&gt;&lt;/a&gt;SOA-RA&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;SOA-RA&lt;/strong&gt; partitions an SOA-based system into a reusable architecture components&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Enterprise SOA Abstraction Layers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Business Process Layer&lt;/li&gt;
&lt;li&gt;Business Services Layer&lt;/li&gt;
&lt;li&gt;Component Layer&lt;/li&gt;
&lt;li&gt;Legacy Object Integration Layer&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- ![](./2016-02-28-midterm-18653/soa-ra.jpg) --&gt;
&lt;img src=&quot;/2016/02/28/midterm-18653/soa-ra.jpg&quot; alt=&quot;soa-ra.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;ATAM&quot;&gt;&lt;a href=&quot;#ATAM&quot; class=&quot;headerlink&quot; title=&quot;ATAM&quot;&gt;&lt;/a&gt;ATAM&lt;/h2&gt;&lt;h3 id=&quot;Quality-attribute&quot;&gt;&lt;a href=&quot;#Quality-attribute&quot; class=&quot;headerlink&quot; title=&quot;Quality attribute&quot;&gt;&lt;/a&gt;Quality attribute&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;li&gt;Modifiablity&lt;/li&gt;
&lt;li&gt;Availability&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;9-steps&quot;&gt;&lt;a href=&quot;#9-steps&quot; class=&quot;headerlink&quot; title=&quot;9 steps&quot;&gt;&lt;/a&gt;9 steps&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Step 1: Present ATAM&lt;/li&gt;
&lt;li&gt;Step 2: Present Business Drivers&lt;ul&gt;
&lt;li&gt;Business context for the system&lt;/li&gt;
&lt;li&gt;High-level functional requirements&lt;/li&gt;
&lt;li&gt;High-level quality attribute requirements&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step 3: Present the Architecture&lt;ul&gt;
&lt;li&gt;Technical constraints such as an OS, hardware&lt;/li&gt;
&lt;li&gt;Architectural styles used to address quality attribute requirements&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step 4: Identify Architectural Approaches&lt;ul&gt;
&lt;li&gt;client-server, 3-tier, proxy, publish-subscribe&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step 5: Generate Utility Tree and scenario&lt;/li&gt;
&lt;li&gt;Step 6: Analyze Architectural Approaches&lt;ul&gt;
&lt;li&gt;risk &amp;amp; non-risk&lt;/li&gt;
&lt;li&gt;sensitivity: A property of a component that is critical to success of system&lt;/li&gt;
&lt;li&gt;tradoff: A property taht affects more than one attribute or sensitivity point&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step 7: Brainstorm &amp;amp; Prioritize Scenarios&lt;/li&gt;
&lt;li&gt;Step 8: Analyze Architectural Approaches&lt;/li&gt;
&lt;li&gt;Step 9: Present ATAM results&lt;ul&gt;
&lt;li&gt;Architectural approaches&lt;/li&gt;
&lt;li&gt;Utility tree&lt;/li&gt;
&lt;li&gt;Scenarios&lt;/li&gt;
&lt;li&gt;Risk and non-risks&lt;/li&gt;
&lt;li&gt;Sensitivity points and tradeoffs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;People-Roles-and-Teams&quot;&gt;&lt;a href=&quot;#People-Roles-and-Teams&quot; class=&quot;headerlink&quot; title=&quot;People, Roles and Teams&quot;&gt;&lt;/a&gt;People, Roles and Teams&lt;/h2&gt;&lt;h3 id=&quot;Architect-desired-skills&quot;&gt;&lt;a href=&quot;#Architect-desired-skills&quot; class=&quot;headerlink&quot; title=&quot;Architect desired skills&quot;&gt;&lt;/a&gt;Architect desired skills&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Software development expertise&lt;/li&gt;
&lt;li&gt;Domain expertise&lt;/li&gt;
&lt;li&gt;Communicator&lt;/li&gt;
&lt;li&gt;Strategist&lt;/li&gt;
&lt;li&gt;Consultant&lt;/li&gt;
&lt;li&gt;Leader&lt;/li&gt;
&lt;li&gt;Technologist&lt;/li&gt;
&lt;li&gt;Cost estimator&lt;/li&gt;
&lt;li&gt;Cheerleader&lt;/li&gt;
&lt;li&gt;Politician&lt;/li&gt;
&lt;li&gt;Salesperson&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有关18653-Software Architecture and Design的期中考试复习&lt;/p&gt;
    
    </summary>
    
      <category term="course notes" scheme="http://yoursite.com/categories/course-notes/"/>
    
    
  </entry>
  
  <entry>
    <title>Architectural Styles介绍</title>
    <link href="http://yoursite.com/2016/02/27/architectural-styles/"/>
    <id>http://yoursite.com/2016/02/27/architectural-styles/</id>
    <published>2016-02-28T04:45:05.000Z</published>
    <updated>2016-02-28T17:25:43.000Z</updated>
    
    <content type="html">&lt;p&gt;主要介绍各种Architectural Styles, 例如C/S, 以及一系列奇奇怪怪的styles。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;为了避免翻译失真，所有风格都保留英文单词。同时为了应付考试，我会在每个style后面列出英文关键词。&lt;/p&gt;
&lt;h2 id=&quot;Traditional-language-influenced-styles&quot;&gt;&lt;a href=&quot;#Traditional-language-influenced-styles&quot; class=&quot;headerlink&quot; title=&quot;Traditional, language-influenced styles&quot;&gt;&lt;/a&gt;Traditional, language-influenced styles&lt;/h2&gt;&lt;h3 id=&quot;Main-program-and-subroutines&quot;&gt;&lt;a href=&quot;#Main-program-and-subroutines&quot; class=&quot;headerlink&quot; title=&quot;Main program and subroutines&quot;&gt;&lt;/a&gt;Main program and subroutines&lt;/h3&gt;&lt;p&gt;这个Style感觉就是C语言的&lt;code&gt;面向过程&lt;/code&gt;的思想。项目中包含&lt;code&gt;主程序&lt;/code&gt;于&lt;code&gt;子过程（函数）&lt;/code&gt;等组件。组件之间使用&lt;code&gt;函数调用&lt;/code&gt;连接。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;procedure-oriented&lt;/code&gt;, &lt;code&gt;main program&lt;/code&gt;, &lt;code&gt;subroutines&lt;/code&gt;, &lt;code&gt;procedure calls&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Object-oriented&quot;&gt;&lt;a href=&quot;#Object-oriented&quot; class=&quot;headerlink&quot; title=&quot;Object-oriented&quot;&gt;&lt;/a&gt;Object-oriented&lt;/h3&gt;&lt;p&gt;所有的组件都是&lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;之间用&lt;code&gt;Method invocation&lt;/code&gt;通信。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;Object&lt;/code&gt;，&lt;code&gt;Method invocation&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Layered&quot;&gt;&lt;a href=&quot;#Layered&quot; class=&quot;headerlink&quot; title=&quot;Layered&quot;&gt;&lt;/a&gt;Layered&lt;/h2&gt;&lt;h3 id=&quot;Virtual-machines&quot;&gt;&lt;a href=&quot;#Virtual-machines&quot; class=&quot;headerlink&quot; title=&quot;Virtual machines&quot;&gt;&lt;/a&gt;Virtual machines&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;Virtual machines&lt;/code&gt;中，存在层级关系，每一层都有一些列&lt;code&gt;服务&lt;/code&gt;或者&lt;code&gt;接口&lt;/code&gt;，供上一层调用。下图就是一个例子。&lt;br&gt;关键词: &lt;code&gt;layer offers a set of services&lt;/code&gt;, &lt;code&gt;services accessed by layer above it&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/virtual-machine.jpg&quot; alt=&quot;virtual-machine.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Client-server&quot;&gt;&lt;a href=&quot;#Client-server&quot; class=&quot;headerlink&quot; title=&quot;Client server&quot;&gt;&lt;/a&gt;Client server&lt;/h3&gt;&lt;p&gt;是一个特殊的&lt;code&gt;virtual machine&lt;/code&gt;。 只有两层(C和S)，并通过网络协议连接。如下图。&lt;br&gt;关键词： &lt;code&gt;two layers virtual machine with network connection&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/c-s.jpg&quot; alt=&quot;c-s.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;Data-flow-styles&quot;&gt;&lt;a href=&quot;#Data-flow-styles&quot; class=&quot;headerlink&quot; title=&quot;Data-flow styles&quot;&gt;&lt;/a&gt;Data-flow styles&lt;/h2&gt;&lt;h3 id=&quot;Batch-sequential&quot;&gt;&lt;a href=&quot;#Batch-sequential&quot; class=&quot;headerlink&quot; title=&quot;Batch sequential&quot;&gt;&lt;/a&gt;Batch sequential&lt;/h3&gt;&lt;p&gt;是一种因计算设备限制而提出的一种古老技术。在这种技术中，我们会将一个大问题简化为几个小部分，每个部分用&lt;code&gt;磁带&lt;/code&gt;交互。现在该技术应该被淘汰了。&lt;br&gt;关键词： &lt;code&gt;data processing when limitations fo computing equipment&lt;/code&gt;, &lt;code&gt;subdivided into severable components&lt;/code&gt;,&lt;code&gt;transfer by magnetic tapes&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/batch-seq.jpg&quot; alt=&quot;batch-seq.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Pipe-and-filter&quot;&gt;&lt;a href=&quot;#Pipe-and-filter&quot; class=&quot;headerlink&quot; title=&quot;Pipe and filter&quot;&gt;&lt;/a&gt;Pipe and filter&lt;/h3&gt;&lt;p&gt;各个&lt;code&gt;filter program&lt;/code&gt;间通过&lt;code&gt;stream&lt;/code&gt;连接。灵活弱耦合但是效率略低。&lt;br&gt;关键词： &lt;code&gt;filter program connects by stream&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/pipe-filter.jpg&quot; alt=&quot;pipe-filter.jpg&quot; title=&quot;&quot;&gt;
&lt;h2 id=&quot;Shared-memory&quot;&gt;&lt;a href=&quot;#Shared-memory&quot; class=&quot;headerlink&quot; title=&quot;Shared memory&quot;&gt;&lt;/a&gt;Shared memory&lt;/h2&gt;&lt;h3 id=&quot;Blackboard&quot;&gt;&lt;a href=&quot;#Blackboard&quot; class=&quot;headerlink&quot; title=&quot;Blackboard&quot;&gt;&lt;/a&gt;Blackboard&lt;/h3&gt;&lt;p&gt;很有意思的一个Styles，这里可以通过一个故事来讲解。有几个专家解决一个问题。每个专家解决一个小问题后可以将内容写到&lt;code&gt;黑板&lt;/code&gt;上，然后其他专家可以根据黑板上的内容继续解决问题，然后写到黑板上，知道整个问题被彻底解决。&lt;/p&gt;
&lt;p&gt;在这个Style中，有一个共享的&lt;code&gt;黑板&lt;/code&gt;用于交流信息，因此叫做&lt;code&gt;Blackboard&lt;/code&gt;。下图中也可以看到三个&lt;code&gt;专家&lt;/code&gt;共享一个&lt;code&gt;黑板&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关键词: &lt;code&gt;experts&lt;/code&gt;,&lt;code&gt;one blackboard&lt;/code&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/02/27/architectural-styles/blackboard.jpg&quot; alt=&quot;blackboard.jpg&quot; title=&quot;&quot;&gt;
&lt;h3 id=&quot;Rule-based&quot;&gt;&lt;a href=&quot;#Rule-based&quot; class=&quot;headerlink&quot; title=&quot;Rule based&quot;&gt;&lt;/a&gt;Rule based&lt;/h3&gt;&lt;p&gt;在这里，共享的是&lt;code&gt;knowledge base&lt;/code&gt;。这是一个包含很多&lt;code&gt;事实&lt;/code&gt;并能产生规则的数据库。这些规则就像&lt;code&gt;if .. then&lt;/code&gt;语句。该系统有两个功能：&lt;code&gt;插入数据（事实）&lt;/code&gt;和&lt;code&gt;查询&lt;/code&gt;。个人感觉就是一个数据库，内部存储一系列数据，然后我们去查询是否有满足特定条件的数据，然后返回&lt;code&gt;true/false&lt;/code&gt;。&lt;br&gt;&lt;code&gt;Prolog&lt;/code&gt;就是基于&lt;code&gt;rule based&lt;/code&gt;的语言，具体可以看&lt;a href=&quot;https://zh.wikipedia.org/wiki/Prolog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;knowledge base&lt;/code&gt;,&lt;code&gt;contains facts and production rules&lt;/code&gt;, &lt;code&gt;query the goal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下图就是一个例子，&lt;code&gt;fact&lt;/code&gt;是&lt;code&gt;burnrate&lt;/code&gt;; &lt;code&gt;goal&lt;/code&gt;是查询&lt;code&gt;是否landed&lt;/code&gt;。我们需要不断修改&lt;code&gt;burnrate&lt;/code&gt;值，然后通过查询，看当前是否满足规则&lt;code&gt;&amp;lt;=(a,0),&amp;lt;(v,3)&lt;/code&gt;。满足的话就说明&lt;code&gt;land&lt;/code&gt;成功。&lt;br&gt;&lt;img src=&quot;/2016/02/27/architectural-styles/rule-base.jpg&quot; alt=&quot;rule-base.jpg&quot; title=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Interpreter&quot;&gt;&lt;a href=&quot;#Interpreter&quot; class=&quot;headerlink&quot; title=&quot;Interpreter&quot;&gt;&lt;/a&gt;Interpreter&lt;/h2&gt;&lt;h3 id=&quot;Basic-interpreter&quot;&gt;&lt;a href=&quot;#Basic-interpreter&quot; class=&quot;headerlink&quot; title=&quot;Basic interpreter&quot;&gt;&lt;/a&gt;Basic interpreter&lt;/h3&gt;&lt;p&gt;就像linux指令的解释器。输入一条指令，&lt;code&gt;inference engine&lt;/code&gt;解析指令，然后执行。&lt;/p&gt;
&lt;p&gt;关键词: &lt;code&gt;inference engine parse a command&lt;/code&gt;, &lt;code&gt;performs variable resolution&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Mobile-code&quot;&gt;&lt;a href=&quot;#Mobile-code&quot; class=&quot;headerlink&quot; title=&quot;Mobile code&quot;&gt;&lt;/a&gt;Mobile code&lt;/h3&gt;&lt;p&gt;在这里，我们会把代码传输到一个远程主机解析。&lt;/p&gt;
&lt;p&gt;举例来说，在分布式系统中，如果需要处理大量数据，我们更倾向于把代码传输到含有数据的主机上执行，这样效率更高。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;code transmitted to a remote host for interpretation&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Implicit-invocation&quot;&gt;&lt;a href=&quot;#Implicit-invocation&quot; class=&quot;headerlink&quot; title=&quot;Implicit invocation&quot;&gt;&lt;/a&gt;Implicit invocation&lt;/h2&gt;&lt;h3 id=&quot;Event-based&quot;&gt;&lt;a href=&quot;#Event-based&quot; class=&quot;headerlink&quot; title=&quot;Event-based&quot;&gt;&lt;/a&gt;Event-based&lt;/h3&gt;&lt;p&gt;不同独立的部分通过在&lt;code&gt;event bus&lt;/code&gt;上发送&lt;code&gt;event&lt;/code&gt;来交互。当组件接受到一个&lt;code&gt;event&lt;/code&gt;，会决定是接收或者无视。&lt;/p&gt;
&lt;p&gt;最初的&lt;code&gt;Event-based&lt;/code&gt;中，所有组件共享一个&lt;code&gt;event bus&lt;/code&gt;，这样效率很低。因此现在的&lt;code&gt;event-based&lt;/code&gt;只会向感兴趣的组件发送&lt;code&gt;event&lt;/code&gt;。所以，现在&lt;code&gt;event-based&lt;/code&gt;和&lt;code&gt;publish-subscribe&lt;/code&gt;没有本质区别了。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;send event&lt;/code&gt;, &lt;code&gt;event bus&lt;/code&gt;, &lt;code&gt;react or ignore an event&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Publish-subscribe&quot;&gt;&lt;a href=&quot;#Publish-subscribe&quot; class=&quot;headerlink&quot; title=&quot;Publish-subscribe&quot;&gt;&lt;/a&gt;Publish-subscribe&lt;/h3&gt;&lt;p&gt;很经典的style，这里不多解释。&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;publisher create information&lt;/code&gt;, &lt;code&gt;subscriber be informed of the information&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Peer-to-peer&quot;&gt;&lt;a href=&quot;#Peer-to-peer&quot; class=&quot;headerlink&quot; title=&quot;Peer to peer&quot;&gt;&lt;/a&gt;Peer to peer&lt;/h2&gt;&lt;p&gt;在一个网络中有很多松耦合的节点。两两节点可以交互。每个节点既是&lt;code&gt;client&lt;/code&gt;也是&lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关键词： &lt;code&gt;loosely coupled autonomous peers&lt;/code&gt;, &lt;code&gt;act both as client and server&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;Derived-styles&quot;&gt;&lt;a href=&quot;#Derived-styles&quot; class=&quot;headerlink&quot; title=&quot;Derived styles&quot;&gt;&lt;/a&gt;Derived styles&lt;/h2&gt;&lt;p&gt;这部分应该不会考到，暂且先搁置一边。&lt;/p&gt;
&lt;h3 id=&quot;C2&quot;&gt;&lt;a href=&quot;#C2&quot; class=&quot;headerlink&quot; title=&quot;C2&quot;&gt;&lt;/a&gt;C2&lt;/h3&gt;&lt;h3 id=&quot;CORBA&quot;&gt;&lt;a href=&quot;#CORBA&quot; class=&quot;headerlink&quot; title=&quot;CORBA&quot;&gt;&lt;/a&gt;CORBA&lt;/h3&gt;&lt;h3 id=&quot;SOA&quot;&gt;&lt;a href=&quot;#SOA&quot; class=&quot;headerlink&quot; title=&quot;SOA&quot;&gt;&lt;/a&gt;SOA&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;主要介绍各种Architectural Styles, 例如C/S, 以及一系列奇奇怪怪的styles。&lt;br&gt;
    
    </summary>
    
      <category term="course notes" scheme="http://yoursite.com/categories/course-notes/"/>
    
    
      <category term="architectural styles" scheme="http://yoursite.com/tags/architectural-styles/"/>
    
  </entry>
  
  <entry>
    <title>Linux指令学习</title>
    <link href="http://yoursite.com/2016/02/27/linux-command/"/>
    <id>http://yoursite.com/2016/02/27/linux-command/</id>
    <published>2016-02-27T13:44:03.000Z</published>
    <updated>2016-02-27T17:17:08.000Z</updated>
    
    <content type="html">&lt;p&gt;常用Linux指令的学习与整理&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h3 id=&quot;读懂man手册&quot;&gt;&lt;a href=&quot;#读懂man手册&quot; class=&quot;headerlink&quot; title=&quot;读懂man手册&quot;&gt;&lt;/a&gt;读懂man手册&lt;/h3&gt;&lt;p&gt;其实，对于任何不理解的指令，我们可以执行&lt;code&gt;man command&lt;/code&gt;查看指令的详细用法。下面我们学习一下&lt;code&gt;man&lt;/code&gt;手册的语法结构。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;man&lt;/code&gt;手册中，我们主要关心&lt;code&gt;Synopsis&lt;/code&gt;与&lt;code&gt;Description&lt;/code&gt;。前者是&lt;code&gt;命令语法的摘要&lt;/code&gt;，后者是&lt;code&gt;完整的描述&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&quot;Synopsis&quot;&gt;&lt;a href=&quot;#Synopsis&quot; class=&quot;headerlink&quot; title=&quot;Synopsis&quot;&gt;&lt;/a&gt;Synopsis&lt;/h5&gt;&lt;p&gt;通常的结构为&lt;code&gt;command [OPTION]... [FILE]...&lt;/code&gt;。其中要注意以下事项。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[]&lt;/code&gt;里面的选项表示可有可无&lt;/li&gt;
&lt;li&gt;&lt;code&gt;...&lt;/code&gt;表示选项可以列多个&lt;/li&gt;
&lt;li&gt;选项通常有两种表示方法&lt;ul&gt;
&lt;li&gt;长选项： 用&lt;code&gt;--&lt;/code&gt;引导，后面跟完整的单词，如&lt;code&gt;--help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;短选项： 用&lt;code&gt;-&lt;/code&gt;引导，后面跟单个字符，如&lt;code&gt;-a&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多个短选项可以组合使用，例如&lt;code&gt;-a -l&lt;/code&gt;可以写为&lt;code&gt;-al&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;由&lt;code&gt;|&lt;/code&gt;分开的几个选项，表示只能从几个选项中选择一个&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h5&gt;&lt;p&gt;一般描述中会列举参数的详细含义&lt;/p&gt;
&lt;h2 id=&quot;基本指令&quot;&gt;&lt;a href=&quot;#基本指令&quot; class=&quot;headerlink&quot; title=&quot;基本指令&quot;&gt;&lt;/a&gt;基本指令&lt;/h2&gt;&lt;p&gt;在这里，主要介绍基于文件增删查改的指令&lt;/p&gt;
&lt;h3 id=&quot;ls指令&quot;&gt;&lt;a href=&quot;#ls指令&quot; class=&quot;headerlink&quot; title=&quot;ls指令&quot;&gt;&lt;/a&gt;ls指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;ls [OPTION]… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;列出目录下的文件，常用的用法有：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls --color 以彩色显示档案 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;     显示详细资料 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;operator&quot;&gt;-a&lt;/span&gt;     显示隐藏档案 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ls -al    同时显示隐藏档案与详细资料&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;cp指令&quot;&gt;&lt;a href=&quot;#cp指令&quot; class=&quot;headerlink&quot; title=&quot;cp指令&quot;&gt;&lt;/a&gt;cp指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cp [OPTION]… [-T] SOURCE DEST&lt;br&gt;cp [OPTION]… SOURCE… DIRECTORY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行拷贝，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt 	复制&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt,并重命名为&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt ./dir/	将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt复制到dir目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt ./dir	将两个文件复制到dir目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;mv指令&quot;&gt;&lt;a href=&quot;#mv指令&quot; class=&quot;headerlink&quot; title=&quot;mv指令&quot;&gt;&lt;/a&gt;mv指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;mv [OPTION]… [-T] SOURCE DEST&lt;br&gt;mv [OPTION]… SOURCE… DIRECTORY&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行移动。我们会发现&lt;code&gt;cp&lt;/code&gt;和&lt;code&gt;mv&lt;/code&gt;的指令结构完全一致，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt 	移动&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt,并重命名为&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt ./dir/	将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt移动到dir目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt ./dir	将两个文件移动到dir目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;rm指令&quot;&gt;&lt;a href=&quot;#rm指令&quot; class=&quot;headerlink&quot; title=&quot;rm指令&quot;&gt;&lt;/a&gt;rm指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cp [OPTION]… FILE…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;将一个或多个文件进行删除，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ rm -rf directory 将文件夹下的所有文件强制删除&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;pwd指令&quot;&gt;&lt;a href=&quot;#pwd指令&quot; class=&quot;headerlink&quot; title=&quot;pwd指令&quot;&gt;&lt;/a&gt;pwd指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;pwd [OPTION]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显示当前的文件目录&lt;/p&gt;
&lt;h3 id=&quot;cat指令&quot;&gt;&lt;a href=&quot;#cat指令&quot; class=&quot;headerlink&quot; title=&quot;cat指令&quot;&gt;&lt;/a&gt;cat指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;cat [OPTION]… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;列出文件的内容，但配合&lt;code&gt;重定向符号&lt;/code&gt;有很多种用法。常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cat &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt 	列出&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt里的内容 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cat &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt   将后面输入的内容存入&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;高级指令&quot;&gt;&lt;a href=&quot;#高级指令&quot; class=&quot;headerlink&quot; title=&quot;高级指令&quot;&gt;&lt;/a&gt;高级指令&lt;/h2&gt;&lt;h3 id=&quot;find指令&quot;&gt;&lt;a href=&quot;#find指令&quot; class=&quot;headerlink&quot; title=&quot;find指令&quot;&gt;&lt;/a&gt;find指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; find [-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec] [path…] [expression]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是&lt;code&gt;[-H] [-L] [-P] [-Olevel] [-D help|tree|search|stat|rates|opt|exec]&lt;/code&gt;并不常用，因此指令可以简化为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;find [path…] [experssion]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该指令执行查找，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ find . -name file.txt    在当前目录下搜索文件file.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find . -name &lt;span class=&quot;string&quot;&gt;&quot;*.txt&quot;&lt;/span&gt;     在当前目录下搜索所有txt文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find . -perm &lt;span class=&quot;number&quot;&gt;755&lt;/span&gt;         在当前目录下查找权限为&lt;span class=&quot;number&quot;&gt;755&lt;/span&gt;的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;chmod指令&quot;&gt;&lt;a href=&quot;#chmod指令&quot; class=&quot;headerlink&quot; title=&quot;chmod指令&quot;&gt;&lt;/a&gt;chmod指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;chmod [OPTION]… MODE[,MODE]… FILE…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;修改一个或多个文件的权限，常用的用法有：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ chmod &lt;span class=&quot;number&quot;&gt;777&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt           将&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt权限修改为&lt;span class=&quot;number&quot;&gt;777&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;￥ chmod a+x &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.txt &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt    给两个文件的所有用户添加执行权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;要注意[ugoa]的含义。u-&amp;gt;owner, g-&amp;gt;group, o-&amp;gt;other, a-&amp;gt;all&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;grep指令&quot;&gt;&lt;a href=&quot;#grep指令&quot; class=&quot;headerlink&quot; title=&quot;grep指令&quot;&gt;&lt;/a&gt;grep指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; grep [OPTION]… PATTERN [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在FILE的每一行中，查找满足PATTERN的行并输出：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ls | grep &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt        在当前路径中查找似乎否有&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ grep &lt;span class=&quot;string&quot;&gt;&#39;[^0-9]&#39;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.txt    在&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.txt种查找包含非数字的行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;awk指令&quot;&gt;&lt;a href=&quot;#awk指令&quot; class=&quot;headerlink&quot; title=&quot;awk指令&quot;&gt;&lt;/a&gt;awk指令&lt;/h3&gt;&lt;p&gt;awk 指令比较复杂，但是也特别灵活。今后有时间会详细写一下，这里只列举几个例子&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ awk &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.csv -F, &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;print $7&amp;#125;&#39;&lt;/span&gt;  将文件&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.csv的每一行按照&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;分割，输出第七列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;再来一个复杂的例子&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.csv | awk &lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  BEGIN &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxCount = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FS = &quot;,&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count[$5]+=$13;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name[$5] = $7;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  END &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (c in count) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (count[c] &amp;gt; maxCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maxCount = count[c];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        id = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print name[id];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果在2.csv种，第5列表示id，第7列表示名字，第13列表示销量。那么该代码表示找到总销量最多的id，并输出其中的一个名字。&lt;/p&gt;
&lt;p&gt;感觉awk写复杂了就是c语言代码了。&lt;/p&gt;
&lt;h3 id=&quot;cut指令&quot;&gt;&lt;a href=&quot;#cut指令&quot; class=&quot;headerlink&quot; title=&quot;cut指令&quot;&gt;&lt;/a&gt;cut指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; cut OPTION… [FILE]…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从文件中截取特订的列，常见的用法有：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cut &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-f&lt;/span&gt;1 file.txt		将file.txt已逗号分隔，输出第一列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ find -c1-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; file.txt		输出file.txt的前三列&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;sed指令&quot;&gt;&lt;a href=&quot;#sed指令&quot; class=&quot;headerlink&quot; title=&quot;sed指令&quot;&gt;&lt;/a&gt;sed指令&lt;/h3&gt;&lt;p&gt;该指令也是一个比较复杂的指令，暂不介绍。&lt;/p&gt;
&lt;h2 id=&quot;系统指令&quot;&gt;&lt;a href=&quot;#系统指令&quot; class=&quot;headerlink&quot; title=&quot;系统指令&quot;&gt;&lt;/a&gt;系统指令&lt;/h2&gt;&lt;h3 id=&quot;ps指令&quot;&gt;&lt;a href=&quot;#ps指令&quot; class=&quot;headerlink&quot; title=&quot;ps指令&quot;&gt;&lt;/a&gt;ps指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; ps [OPTIONS]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看当前进程，通常和grep一起用：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ps | grep bash 	查看名为bash的进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;kill指令&quot;&gt;&lt;a href=&quot;#kill指令&quot; class=&quot;headerlink&quot; title=&quot;kill指令&quot;&gt;&lt;/a&gt;kill指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt; kill [-s signal|-p] [–] pid…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向pid进程发送信号&lt;/p&gt;
&lt;h3 id=&quot;telent指令&quot;&gt;&lt;a href=&quot;#telent指令&quot; class=&quot;headerlink&quot; title=&quot;telent指令&quot;&gt;&lt;/a&gt;telent指令&lt;/h3&gt;&lt;p&gt;用于和主机通信的指令，通常用于诊断服务器&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ telent myhost.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ telent &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; myusername myhost.com:&lt;span class=&quot;number&quot;&gt;5555&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;parted指令&quot;&gt;&lt;a href=&quot;#parted指令&quot; class=&quot;headerlink&quot; title=&quot;parted指令&quot;&gt;&lt;/a&gt;parted指令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;parted [options] [device [command [options…]…]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看或操作分区，常用的指令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ parted &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt; 列出所有的磁盘分区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;常用Linux指令的学习与整理&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hexo简明教程</title>
    <link href="http://yoursite.com/2016/02/26/hexo-github-tutorial/"/>
    <id>http://yoursite.com/2016/02/26/hexo-github-tutorial/</id>
    <published>2016-02-27T03:21:12.000Z</published>
    <updated>2016-02-27T04:55:08.000Z</updated>
    
    <content type="html">&lt;p&gt;在这里，我将介绍如何使用Hexo在Github上搭建博客，也就是我们现在看到的博客。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;headerlink&quot; title=&quot;搭建环境&quot;&gt;&lt;/a&gt;搭建环境&lt;/h2&gt;&lt;p&gt;这里，主要介绍如何在windows系统上操作。但其实无论windows或是mac，其原理都是一样的&lt;/p&gt;
&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;p&gt;安装&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.JS&lt;/a&gt;, &lt;a href=&quot;https://desktop.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo安装与配置&quot;&gt;&lt;a href=&quot;#Hexo安装与配置&quot; class=&quot;headerlink&quot; title=&quot;Hexo安装与配置&quot;&gt;&lt;/a&gt;Hexo安装与配置&lt;/h2&gt;&lt;h3 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h3&gt;&lt;p&gt;首先，我们要安装&lt;code&gt;Hexo&lt;/code&gt;。双击&lt;code&gt;Git Shell&lt;/code&gt;,输入如下&lt;code&gt;npm&lt;/code&gt;指令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;初始化Hexo&quot;&gt;&lt;a href=&quot;#初始化Hexo&quot; class=&quot;headerlink&quot; title=&quot;初始化Hexo&quot;&gt;&lt;/a&gt;初始化Hexo&lt;/h3&gt;&lt;p&gt;安装完成后，找到一个目录用于存放博客，本文以&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;为例。执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装常用插件&quot;&gt;&lt;a href=&quot;#安装常用插件&quot; class=&quot;headerlink&quot; title=&quot;安装常用插件&quot;&gt;&lt;/a&gt;安装常用插件&lt;/h3&gt;&lt;p&gt;安装必要的插件可以简化今后博客的部署与生成。同样在&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;目录下，执行如下指令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-index --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-archive --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-category --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-tag --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-server --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-heroku --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-rsync --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-openshift --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-renderer-marked@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-renderer-stylus@&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-feed@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-sitemap@&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查看效果&quot;&gt;&lt;a href=&quot;#查看效果&quot; class=&quot;headerlink&quot; title=&quot;查看效果&quot;&gt;&lt;/a&gt;查看效果&lt;/h3&gt;&lt;p&gt;执行如下指令后，可以访问&lt;code&gt;localhost:4000&lt;/code&gt;查看博客效果。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意： 在我的机器中执行&lt;code&gt;hexo s&lt;/code&gt;无法访问博客。因此我执行的是&lt;code&gt;hexo s -p 3333&lt;/code&gt;，将端口号改为&lt;code&gt;3333&lt;/code&gt;。随后在&lt;code&gt;localhost:3333&lt;/code&gt;看到了博客。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;将Hexo部署到Github&quot;&gt;&lt;a href=&quot;#将Hexo部署到Github&quot; class=&quot;headerlink&quot; title=&quot;将Hexo部署到Github&quot;&gt;&lt;/a&gt;将Hexo部署到Github&lt;/h2&gt;&lt;h3 id=&quot;注册并设置Github&quot;&gt;&lt;a href=&quot;#注册并设置Github&quot; class=&quot;headerlink&quot; title=&quot;注册并设置Github&quot;&gt;&lt;/a&gt;注册并设置Github&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;访问&lt;a href=&quot;&quot;&gt;Github&lt;/a&gt;,注册一个用户。&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;New repository&lt;/code&gt;,设置&lt;code&gt;Repository name&lt;/code&gt;为&lt;code&gt;name.github.io&lt;/code&gt;，因为我的用户名为&lt;code&gt;jackqdyulei&lt;/code&gt;，所以我的&lt;code&gt;Repository name&lt;/code&gt;为&lt;code&gt;jackqdyulei.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;Create repository&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;修改Hexo配置文件&quot;&gt;&lt;a href=&quot;#修改Hexo配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改Hexo配置文件&quot;&gt;&lt;/a&gt;修改Hexo配置文件&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;E:\kuaipan\Github\Hexo&lt;/code&gt;下，打开&lt;code&gt;_config.yml&lt;/code&gt;文件。在后面添加&lt;code&gt;deploy&lt;/code&gt;指令，具体如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/name/name.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我的&lt;code&gt;name&lt;/code&gt;为&lt;code&gt;jackqdyulei&lt;/code&gt;,因此我的配置文件如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/jackqdyulei/jackqdyulei.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意&lt;code&gt;yml&lt;/code&gt;文件的格式，冒号后面一定要有一个空格！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;正式部署&quot;&gt;&lt;a href=&quot;#正式部署&quot; class=&quot;headerlink&quot; title=&quot;正式部署&quot;&gt;&lt;/a&gt;正式部署&lt;/h3&gt;&lt;p&gt;每次写完博客后，执行下面指令将博客部署到Github上，随后就可以访问&lt;code&gt;http://name.github.io/&lt;/code&gt;看效果。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Hexo指令学习&quot;&gt;&lt;a href=&quot;#Hexo指令学习&quot; class=&quot;headerlink&quot; title=&quot;Hexo指令学习&quot;&gt;&lt;/a&gt;Hexo指令学习&lt;/h2&gt;&lt;p&gt;想玩转Hexo指令，可以访问&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;很多博客的基础设置都可以在&lt;code&gt;_config.yml&lt;/code&gt;中修改，具体字段含义官方网站有讲过。&lt;/p&gt;
&lt;h2 id=&quot;Hexo进阶&quot;&gt;&lt;a href=&quot;#Hexo进阶&quot; class=&quot;headerlink&quot; title=&quot;Hexo进阶&quot;&gt;&lt;/a&gt;Hexo进阶&lt;/h2&gt;&lt;h3 id=&quot;更换主题&quot;&gt;&lt;a href=&quot;#更换主题&quot; class=&quot;headerlink&quot; title=&quot;更换主题&quot;&gt;&lt;/a&gt;更换主题&lt;/h3&gt;&lt;p&gt;原版的Hexo主题有些粗糙，我们可以在&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;寻找自己喜欢的主题。我选择的主题是&lt;a href=&quot;http://litten.github.io/2014/08/31/hexo-theme-yilia/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我是按照&lt;a href=&quot;http://litten.github.io/2014/08/31/hexo-theme-yilia/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个教程&lt;/a&gt;设置的主题。所有的主题存储在&lt;code&gt;hexo/themes&lt;/code&gt;目录下&lt;/p&gt;
&lt;p&gt;设置完毕后记得执行&lt;code&gt;hexo g&lt;/code&gt;去生成最终效果。&lt;/p&gt;
&lt;h3 id=&quot;设置多说评论&quot;&gt;&lt;a href=&quot;#设置多说评论&quot; class=&quot;headerlink&quot; title=&quot;设置多说评论&quot;&gt;&lt;/a&gt;设置多说评论&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;注册多说&lt;/strong&gt;&lt;br&gt;将评论系统改为&lt;code&gt;多说&lt;/code&gt;，方便网友评论。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;注册用户，并点击&lt;code&gt;我要安装&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在&lt;a href=&quot;http://duoshuo.com/create-site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;创建网址&lt;/a&gt;输入基本信息。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;站点网址&lt;/code&gt;设为你的Github地址，例如&lt;code&gt;http://jackqdyulei.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;记录下&lt;code&gt;多说域名&lt;/code&gt;，后面会用到。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;修改主题配置文件&lt;/strong&gt;&lt;br&gt;进入到你所选主题的目录下，例如&lt;code&gt;hexo/themes/yilia&lt;/code&gt;。打开&lt;code&gt;_config.yml&lt;/code&gt;文件。&lt;/p&gt;
&lt;p&gt;找到里面&lt;code&gt;duoshuo&lt;/code&gt;的配置，修改如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;duoshuo: 多说域名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;duoshuo_shortname: 多说域名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的&lt;code&gt;多说域名&lt;/code&gt;为注册时设置的名称，例如我之前设置的为&lt;code&gt;jackqdyulei-github.duoshuo.com&lt;/code&gt;,那么在上面填入&lt;code&gt;jackqdyulei-github&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改评论代码&lt;/strong&gt;&lt;br&gt;修改&lt;code&gt;themes\landscape\layout\_partial\article.ejs&lt;/code&gt; 模板&lt;br&gt;将&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!index &amp;amp;&amp;amp; post.comments &amp;amp;&amp;amp; config.disqus_shortname)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;comments&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;//disqus.com/?ref_noscript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;noscript&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!index &amp;amp;&amp;amp; post.comments &amp;amp;&amp;amp; config.duoshuo_shortname)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;comments&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说评论框 start --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;ds-thread&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-thread-key&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.layout %&amp;gt;-&amp;lt;%= post.slug %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-title&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= post.title %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;data-url&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;&amp;lt;%= page.permalink %&amp;gt;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说评论框 end --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; duoshuoQuery = &amp;#123;short_name:&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;%= config.duoshuo_shortname %&amp;gt;&#39;&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ds = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.type = &lt;span class=&quot;string&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;;ds.async = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.src = (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.location.protocol == &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&#39;https:&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;http:&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;//static.duoshuo.com/embed.js&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ds.charset = &lt;span class=&quot;string&quot;&gt;&#39;UTF-8&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;head&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       || &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]).appendChild(ds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 多说公共JS代码 end --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;在这里，我将介绍如何使用Hexo在Github上搭建博客，也就是我们现在看到的博客。&lt;/p&gt;
    
    </summary>
    
      <category term="tutorials" scheme="http://yoursite.com/categories/tutorials/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/02/25/hello-world/"/>
    <id>http://yoursite.com/2016/02/25/hello-world/</id>
    <published>2016-02-26T02:16:13.000Z</published>
    <updated>2016-02-27T05:27:33.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
